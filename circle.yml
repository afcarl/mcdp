dependencies:
  pre:
    - mkdir ~/.fonts
    - wget -OSTIX.zip https://sourceforge.net/projects/stixfonts/files/Past%20Releases/STIXv1.1.0.zip/download
    - unzip STIX.zip -d ~/.fonts/
    - fc-cache -fv
    - fc-list | sort | grep STIX
    - sudo rm -rf /opt/circleci/nodejs/
    - sudo apt-get -qq update -y
    - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash
    - sudo add-apt-repository -y ppa:lyx-devel/release
    - sudo apt-get update
    #- sudo apt-cache policy nodejs
    - sudo apt-get -qq -y install build-essential nodejs
    - echo "Current directory:"
    - pwd
    - /usr/bin/npm config set loglevel warn
    - sudo /usr/bin/npm --loglevel=silent install -g MathJax-node jsdom less 2>/dev/null 1>/dev/null
    # - sudo /usr/bin/npm install -g --unsafe-perm node_gyp MathJax-node jsdom
    # - sudo /usr/bin/npm rebuild
    - sudo apt-get -qq install -y graphviz python-numpy python-yaml python-dev python-setproctitle python-psutil python-lxml python-PIL python-matplotlib python-yaml python-pip python-tk idle python-pmw python-imaging
    # no sudo here:
    - pip install numpy lxml matplotlib pillow junit_xml

    # only needed for manual
    #- sudo apt-get install lyx
    # - lyx --version
    - nodejs --version
    - make css

test:
  override:
    - echo "Worker" $CIRCLE_NODE_INDEX " of " $CIRCLE_NODE_TOTAL:
            parallel: true
    - echo "Current directory:"
    - pwd
    - /usr/bin/nodejs --version
    - /usr/bin/npm --version
    - python --version
    - python -c "import numpy; print numpy.__version__"
    - python -c "import matplotlib; print matplotlib.__version__"
    - python -c "import compmake; print compmake.__version__"
    - python -c "import contracts; print contracts.__version__"
    - fc-list | sort
    - "echo '\nconfig interactive 0\nconfig echo_stdout 0\nconfig echo_stderr 0\nconfig echo True\nconfig status_line_enabled True \nconfig console_status True\nconfig console_status_delta 5' >> .compmake.rc ":
        parallel: true
    - "cat .compmake.rc":
        parallel: true
    #- "make clean comptests-run-parallel-nocontracts || true":
    - "make clean circle":
        parallel: true
        environment:
            MCDP_TEST_SKIP_MCDPOPT: 1
            # MCDP_TEST_LIBRARIES_EXCLUDE = mcdp_theory
            # MCDP_TEST_LIBRARIES = "basic,eversion,libtemplates,multisets_tests,posets,tuple_indexing,tuple_making,uncertainty,comments,documents,making,pop,batteries_v1"
            MPLBACKEND: agg
    - "./misc/collect-test-artifacts.sh ${CIRCLE_ARTIFACTS} ${CIRCLE_TEST_REPORTS} ":
        parallel: true
    # - "./misc/upload-to-frankfurt.sh":
    #     parallel: true

  # post: # done after all containers have finished
  #   - "./misc/collect-test-artifacts.sh ${CIRCLE_ARTIFACTS} ${CIRCLE_TEST_REPORTS} ":
  #       parallel: true
  #   - "./misc/upload-to-frankfurt.sh ":
  #       parallel: true

# general:
#     artifacts:
#         # - out
#         # - src
#         - src/mcdp_data/libraries/manual.mcdplib/out-versions/
