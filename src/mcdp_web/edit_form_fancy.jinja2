<!DOCTYPE html>

<html lang="en">
  <head>
  	{% include 'head.jinja2' %}
  	
    <style type="text/css">
    #syntax_error {
    	font-weight: bold;
    	font-size: smaller;
    	color: red;
    }
    #error_notice {
    	color: red;
    }

	#editor {
		font-size: 80%;
		width: 40em;
	}

	#editor { outline: 0px solid transparent; }

    </style>
  </head>
  
  <body>
  
  <div id='around_editor'>
  	<pre ><code contenteditable="true" id='editor'>{{source_code|safe}}</code></pre>
  </div>
  
  <div id='commands'>
  	<button id='save'>Save</button>
  	<button id='discard'>Discard</button>
  	<br/>
  	<span id='save_status'></span>
 
  </div>

  <pre id='syntax_error'></pre>
  <pre id='comm_failure'></pre>

  <!-- <div id='caretposition'></div> -->
	
<script type='text/javascript'>
	var last_text = null;
	var last_text_sent_to_server = null;

	var timeoutID = null;
	var parsing_wait_ms = 400;

	$(document).ready(function() {

		$("#editor").keyup(keyup);
		$( "button#save" ).click(click_button_save);
		$( "button#discard" ).click(click_button_discard);

	    try_to_parse(current_text());
	});

	function current_text() {
		text = $("#editor").text();
		return text;
	}

	function keyup() {
		text = $("#editor").text();
		// do not do it twice
		if (text == last_text)
			return;
		last_text = text;

		$('button#save').disable();
		$('#around_editor').css('background-color', '#ffe');
		
		if (timeoutID != null){
			window.clearTimeout(timeoutID);
		}

		timeoutID = window.setTimeout(try_to_parse_it, parsing_wait_ms);
	}

	function try_to_parse_it() {
		text = $("#editor").text();
		
		element = $('#editor').get(0);
		//pos = getCaretCharacterOffsetWithin(element);
		try_to_parse(text);
	}

	function on_comm_failure(error) {
		console.log('AJAX error');
		console.log(error);
		$('#comm_failure').html(error);
	}

	function update_text(highlight, pos) {
	
		$("#editor").html(highlight);
		
		editor = $("#editor").get(0);
		elements = get_elements(editor);

		if (pos >= elements.length) {
			pos = elements.length - 1;
			textNode = elements[pos]['text'];
			caret = elements[pos]['char'] + 1
		} else {
			e = elements[pos];
			textNode = e['text'];
			caret = e['char'];
				
			if (e == null) {
				console.log('Could not find element at range ' + pos);
				console.log(elements);
			}
		}
		
		var range = document.createRange();
		range.setStart(textNode, caret);
		range.setEnd(textNode, caret);
		var sel = window.getSelection();
		sel.removeAllRanges();
		sel.addRange(range);

		$('#around_editor').css('background-color', 'white');
		$('#syntax_error').html('');
		$('button#save').enable();
	}

	function try_to_parse(s) {
		//console.log(JSON.stringify(s));

		function on_proc_failure(res) {
			console.log(res['error']);
			$('#syntax_error').html(res['error']);
			//$('#syntax_error').show();
			$('#around_editor').css('background-color', '#fee');
			$('button#save').disable();
		}	

		function on_success(res) {
			if (res['request']['text'] != last_text_sent_to_server){
				console.log('Slow server: ignoring stale.');
				return;
			}

			pos = getCaretCharacterOffsetWithin($("#editor").get(0));
			if (pos == null){
				console.log('Cannot get element cursor.');
				pos = 0;
			}

			update_text(res['highlight'], pos);		
		}

		last_text_sent_to_server = s;
		ajax_send("ajax_parse", {'text': s}, on_comm_failure, on_proc_failure, on_success);
	}

	function click_button_discard(res) {
		location.reload();
	}

	function click_button_save() {
		$('#save_status').html('saving...');
		data = {'text': current_text()};
		ajax_send("save", data, on_comm_failure, 
				  click_button_save_failure, click_button_save_success);
	}
	
	function click_button_save_success(res) {
		show_status('success');
		console.log('success');
		console.log(res);
	}

	function click_button_save_failure(res) {
		show_status('failed');
		console.log('failure');	
		console.log(res);
	}

	display_timeout = 2000;
	function clear_status() {
		$('#save_status').html('');
	}
	function show_status(msg) {
		$('#save_status').html(msg);
		window.setTimeout(clear_status, display_timeout);
	}

	</script>
  
  </body>
</html>