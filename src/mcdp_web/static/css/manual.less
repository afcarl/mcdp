#version-@{stylesheet} {
    border: solid 1px red;
}


body > P:first-of-type::before {
    content: 'Stylesheet: ' @stylesheet;
}

@import 'reset';
@import 'reset-fix';
@import 'colors';
@import 'captions';
@import 'keywords_in_headers';


// @import 'page-ipad';

@import 'toc';
@import 'fonts';
@import 'markdown';
@import 'mcdp_language_highlight';
// @import 'debug_layout';


// IF RELEASE {
// @import 'hide_errors';
// @import 'only_good';

@line-height: 1.15;
p, div.latex_env, div.minipage {
    // line-height: 12.5pt;
    line-height: @line-height;
}
p {
    margin-bottom: 3pt;
    margin-top: 3pt;

}
figcaption {
    line-height: @line-height;
}
blockquote {
    margin-left: 3em;
}

h1 {
    font-weight: bold;
    text-align: center;
}
h2 { font-weight: bold; }


body {
  font-size: 10pt;
}


/* Good for safari */

@media screen {
    pre {
         box-shadow: none;
    }
}

.ndp_graph_expand,
.ndp_graph_enclosed,
.ndp_graph_normal,
.ndp_graph_templatized,
.ndp_graph_templatized_labeled,
.template_graph_enclosed {
    max-width: 50em;

}

span.language_warning { background-color: inherit !important; }

p { max-width: 40em; }

code { page-break-inside: avoid; }



pre, code {
    font-size: 8pt;
}


body {
  text-align: justify;
}

h1 { font-size: 15pt; color: black !important;}
h2 { font-size: 12pt; color: black !important;}
h3 {
    font-size: 10pt; }


p code { font-size: 8pt; }
pre {
    display: inline-block;
}
pre, pre code {
}
pre .label { font-size: 8px; font-style: normal; }
pre {
    margin-left: 0.4em !important;
    border-radius: 4px !important;
    padding: 5px !important;
}
/* without labels */
pre:not(.has_label) {
    /*margin-top: 0 !important;*/

}
/* with labels */
pre.has_label {
    margin-top: 0;
}

p { margin-top: 0.3em; margin-bottom: 0.3em; }
h1,h2,h3 { margin-bottom: 0.3em; margin-top: 0.3em; }
pre code { margin: 0; }
pre { padding: 3pt; }
a { color: #005; }
/*ul, li {padding: 0; padding-left: 0em !important;}*/
ul.toc { padding-left: 0; }
li {margin: 0; margin-left: 0;}
/*.toc ul ul li { display: none; }*/




/********** headings *********/

#toc-heading { text-align: center; }

h2 { margin-top: 2em !important; }
h3 {
    color: #615d5d;

    font-style: normal !important;
    font-weight: bold;
    padding-top: 1em;

    width: 100%;
    padding-bottom: 3pt;
    border-bottom: solid 0.5pt grey;
}


#toc-heading { font-variant: small-caps; }
h1:not(#booktitle) {
    ::before { content: 'Chapter '; }
}
/***** end headings *****/


/******  latex ****/

div.definition::before { font-weight: bold; content: 'Definition ' counter(definition)'.';}
div.example::before { font-weight: bold; content: 'Example ' counter(example) '.';}
div.remark::before { font-weight: bold; content: 'Remark ' counter(remark)'.';}
div.problem::before { font-weight: bold; content: 'Problem ' counter(problem)'.';}
div.lemma::before { font-weight: bold; content: 'Lemma ' counter(lemma)'.';}
div.proposition::before { font-weight: bold; content: 'Proposition ' counter(proposition)'.';}
div.theorem::before { font-weight: bold; content: 'Theorem ' counter(theorem)'.';}


.latex_env span.latex_env_label::before {content: ' (';}
.latex_env span.latex_env_label::after {content: ') ';}


/****** end latex ****/

/**** misc ***/


body {
    hyphens: auto;
}
/* No decoration for links */
a {
    text-decoration: none;
     color: darkblue;
}


pre {
    margin-bottom: 0;
}

p + pre {
    margin-top: 0.7em;
}
pre + br + pre {
    margin-top: 0.3em;
    /*border: solid 1px red;*/
 /*float: left; clear: left;*/
}

div.todo-wrap {
    text-align: center;
}
p.todo {
    display:inline-block;
    background-color: #fdd;
}
p.todo::before { content: 'TODO: '; font-weight: bold; }


figure:not(.subfloat) {
    /*counter-increment: figure;*/
    counter-reset: subfloat;
}
figure.subfloat {
    counter-increment: subfloat;
}

figure[id^='fig:'] { counter-increment: figure; }
figure.table {  counter-increment: table; }
div.example {  counter-increment: example; }
div.remark {  counter-increment: remark; }
div.definition {  counter-increment: definition; }
div.lemma {  counter-increment: lemma; }
div.proposition {  counter-increment: proposition; }
div.theorem {  counter-increment: theorem; }
div.problem {  counter-increment: problem; }



figure[id^='code:'] { counter-increment: listing; }
figure[id^='code:'] figcaption:not(:empty)::before {
    content: 'Listing ' counter(listing) '. ';
}

figure[id^='code:'] {
    display: inline-block;
    text-align: center;
}
figure[id^='fig:']
{
    /*border: solid blue;*/
    text-align: center;
}
figure[id^='code:'] figcaption {
    text-align: center;
    /*border: solid;*/
    width: 100%;
}
figure[id^='code:'] figcaption:not(:empty) {
    text-align: left;
    max-width: 30em;
}
figure[id^='code:'] figcaption:empty::before {
    content: 'Listing ' counter(listing);
}


/* Not empty caption */
figure.table {
    display: inline-block;
}
figure.table figcaption {
    padding-left: 2em;
    padding-right: 2em;
    width: 100%;
    text-align: center;
    font-variant: small-caps;
    letter-spacing: 0.24pt;
    font-size: 10pt;
}

@NS: '♦';

@label-tab: 'Table' @nbsp counter(table);
@label-subfig: '(' counter(subfloat, lower-alpha) ')';
@nbsp: '\0000a0';

/*@num-eq: target-counter(attr(href), listing);
@ref-eq: '(' @num-eq ')';
*/

@label-code: 'Listing' @nbsp counter(listing);
@num-code: target-counter(attr(href), listing);
@ref-code: 'Listing' @nbsp @num-code;
@num-exa: target-counter(attr(href), example);
@ref-exa: 'Example' @nbsp @num-code;

@label-fig: 'Figure' @nbsp counter(figure);
@num-fig: target-counter(attr(href), figure);
@ref-fig: 'Fig.' @nbsp @num-fig;

@label-subfig: '(' counter(subfloat, lower-alpha) ')';
@num-subfig: target-counter(attr(href), figure) target-counter(attr(href), subfloat, lower-alpha);
@ref-subfig: 'Fig.' @nbsp @num-subfig;


@not_empty_before: ~':not(:empty)::before';
@empty_before: ~':empty::before';

figure[id^='tab:'] > figcaption{
    &@{not_empty_before} { content: @label-tab '. '; }
    &@{empty_before}     { content: @label-tab;      }
}

figure[id^='fig:'] > figcaption {
    &:not(:empty)  {
        text-align: justify;
    }
    &@{not_empty_before} { content: @label-fig '. '; }
    &@{empty_before}     { content: @label-fig;      }
}

figure[id^='subfig:'] > figcaption {
    &@{not_empty_before} { content: @label-subfig @nbsp; }
    &@{empty_before}     { content: @label-subfig;       }
}

figure[id^='subfig:'] > figcaption:empty {
    text-align: center;
}
/* Empty caption */
figcaption { font-size: smaller; }

@only-number: ~'.only-number::before';
@regular-ref: ~':not(.only-number)::before';

a[href^='#code:']:empty {
    &@{only-number} {  content: @NS; content: @num-code; }
    &@{regular-ref} {  content: 'Listing' @nbsp @NS; content: @ref-code; }
}

a[href^='#fig:']:empty  {
    &@{only-number} {  content: @NS; content: @num-fig; }
    &@{regular-ref} {  content: 'Figure' @nbsp @NS; content: @ref-fig; }
}

a[href^='#subfig:']:empty  {
    &@{only-number} {  content: @NS; content: @num-subfig; }
    &@{regular-ref} {  content: 'Fig.' @nbsp @NS '?'; content: @ref-subfig; }
}

a[href^='#exa:']:empty  {
    &@{only-number} {  content: @NS; content: @num-exa; }
    &@{regular-ref} {  content: 'Example' @nbsp @NS; content: @ref-exa; }
}
//
// a[href^='#exa:'   ]:empty  {  content: 'Example.♦';content: 'Example\0000a0' target-counter(attr(href), example); }


//
// a[href^='#subfig:']:empty:not(.only-number)::before {  content: 'Fig.♦?'; content: 'Fig.\0000a0' target-counter(attr(href), figure)  target-counter(attr(href), subfloat,  lower-alpha); }
// a[href^='#subfig:']:empty.only-number::before {  content: '♦?';  content:  target-counter(attr(href), figure) target-counter(attr(href), subfloat, lower-alpha); }

a[href^='#tab:'   ]:empty:not(.only-number)::before { content: 'Table♦'; content: 'Table\0000a0' target-counter(attr(href), table);}
a[href^='#tab:'   ]:empty.only-number::before {  content: '♦'; content:  target-counter(attr(href), table);}
a[href^='#rem:'   ]:empty::before {  content: 'Remark.♦';content: 'Remark\0000a0' target-counter(attr(href), remark); }
a[href^='#lem:'   ]:empty::before {  content: 'Lemma.♦';content: 'Lemma\0000a0' target-counter(attr(href), lemma); }
a[href^='#def:'   ]:empty::before {  content: 'Def.♦'; content: 'Def.\0000a0' target-counter(attr(href), definition); }
a[href^='#prop:'  ]:empty::before {  content: 'Prop.♦';content: 'Prop.\0000a0' target-counter(attr(href), proposition); }
a[href^='#prob:'  ]:empty::before {  content: 'Problem.♦';content: 'Problem\0000a0' target-counter(attr(href), problem); }
a[href^='#thm:'   ]:empty:not(.only-number)::before {  content: 'Theorem♦'; content: 'Theorem\0000a0' target-counter(attr(href), theorem); }
a[href^='#thm:'   ]:empty.only-number::before {  content: '♦'; content: target-counter(attr(href), theorem); }
a[href^='#sub:'   ]:empty:not(.only-number)::before { content: 'Subsection♦.♦'; content: 'Subsection\0000a0' target-counter(attr(href), section) '.' target-counter(attr(href), subsection) ; }
a[href^='#sub:'   ]:empty.only-number::before { content: '♦.♦'; content:target-counter(attr(href), section) '.' target-counter(attr(href), subsection) ; }

a[href^='#subsub:']:empty::before {
    content: 'Section♦';
    content: 'Section\0000a0' target-counter(attr(href), section) '.' target-counter(attr(href), subsection) '-' target-counter(attr(href), subsubsection, upper-alpha);
}


/** maybe chapter **/

/** Very important - otherwise counters are local to divs,
    and not robust to errors with divs */

body {
    counter-reset: part table listing bib section appendix subsection subsubsection figure example remark definition proposition lemma theorem problem ;

}

h1 {
    counter-reset: subsection subsubsection;

    &:not([nonumber])[id^='part:'] { counter-increment: part; }
    &:not([nonumber])[id^='sec:'] { counter-increment: section; }
    &:not([nonumber])[id^='app:'] { counter-increment: appendix; }
}

h1 {
    margin-bottom: 2em;
}
/*h2 :not([nonumber]) */
/*h2:not([nonumber]) { }*/
    /*border: solid;*/

h2 {
    &:not([nonumber]) {
        counter-increment: subsection;
    }

    counter-reset: subsubsection;
}

h3:not([nonumber]) {
    counter-increment: subsubsection;
}


a[href^='#sec:']::before {
    content: 'Chapter♦';
    content: 'Chapter\0000a0' target-counter(attr(href), section);
}

ul.toc a[href^='#app:']::before { /* mdash: — ndahs:  –; */
    content: 'Appendix\0000a0' '♦' ' –';
    content: 'Appendix\0000a0' target-counter(attr(href), appendix, upper-alpha) ' –';
    font-weight: bold;
}

ul.toc a[href^='#sec:']::before { /* mdash: — ndahs:  –; */
    content: 'Chapter\0000a0' '♦' ' –';
    content: 'Chapter\0000a0' target-counter(attr(href), section) ' –';
    font-weight: bold;
}

h1:not([nonumber])[id^="app:"]::before {
    content: 'Appendix\0000a0' counter(appendix, upper-alpha);
    display:block;
    font-variant: small-caps;
    font-size: smaller;
    margin-bottom: 0.5em;
}
h1:not([nonumber])[id^="sec:"]::before {
    content: 'Chapter\0000a0' counter(section);
    display:block;
    font-variant: small-caps;
    font-size: smaller;
    margin-bottom: 0.5em;
}
.toc_number { display :none; }
h1[nonumber]::before {
    /*content: '(u)';*/
}



ul.toc a[href^='#sub:']::before {
    content: '♦.♦' ' –';
    content: target-counter(attr(href), section) '.' target-counter(attr(href), subsection) ' –';

}


h2:not([nonumber])[id^='sub:']::before {
    content: /*'Subsection\0000a0'*/ counter(section)'.'counter(subsection) '. ';
}

h2:not([nonumber])[id^='appsub:']::before {
    content: /*'Subsection\0000a0'*/ counter(appendix, upper-alpha)'.'counter(subsection) '. ';
}


ul.toc a[href^='#subsub:']::before {
    display: none; content: none;
}

h3:not([nonumber])::before {
    /*content: counter(section) '.' counter(subsection) '-' counter(subsubsection, upper-alpha) '. ';*/
    content: counter(subsubsection, lower-alpha) ') ';
}
/*

h1:not([nonumber])::after {
    content: '{css_computed:"' counter(section)'"}';
    color: green;
}
h2:not([nonumber])::after {
    content: '{css_computed:"' counter(section)'.'counter(subsection) '"}';
    color: green;
}
h3:not([nonumber])::after {
    color: green;
    content: '{css_computed:"' counter(section)'.'counter(subsection)'-'counter(subsubsection, upper-alpha) '"}';
}

*/


/*TODO: make preprocessing into code*/
/*f,r { font-family: monospace; font-size: 80%;}*/
.f { color: @fcolor; }
.r { color: @rcolor;}
.imp { color: @icolor; }
.impname {color: @icolor; }
.keyword.f { color: @fcolor; }
.keyword.r { color: @rcolor;}


div.figure { border: solid; }

.Fcolor { color: @fcolor; }
.Rcolor { color: @rcolor; }


.uline { text-decoration: underline; }

div.fbox { border: solid 1pt black; padding: 3pt;}

div.center, div.centering { text-align: center; }


a[href^='#bib:'] {

    &:empty::before {
        content: '['@NS']';
        content: '[' target-counter(attr(href), bib) ']';
    }
    &:not(:empty){
        &::before{
            content: '[' @NS ', ';
            content: '[' target-counter(attr(href), bib) ', ';
        }
        &::after{
            // content: @NS;
            content: ']';
        }
    }
}

figure.table figcaption { padding-bottom: 0.3em; }
figure.table td:not(:first-child) {
    padding-left: 1em;
}
div.table-wrap { text-align: center; }

/**** col2, etc . ***/


div.colN-wrap {
    text-align: center;
    /*border: solid 1px blue;*/
}
div.colN-wrap table {
    display: inline-block;
    /*border: solid 1px red;*/
}

div.colN-wrap table td {
    padding-left: 0.7em;
    padding-right: 0.7em;
    /*border: solid 1px blue;*/
}
table.col2 tr td {
}
table.col2 tr {
}
table.col2 td {
    width: fill-available;
}
table.col2 {
    max-width: 100%;
    /*text-align: center;*/
}
figcaption {
    margin-top: 0.7em;
}
table.col2 td {
    padding-bottom: 0;
    vertical-align: middle;
    margin-left: auto;
    margin-right: auto;
}

// p svg {
//     margin-top: -100px;
// }

h2,h3,h4 { clear: both; }


table.labels-col1 {
    td:first-child {
        font-size: 90%;
        font-weight: bold;
    }

    border-collapse: collapse;
    border: 0;

    td:first-child {
        padding-right: 3pt;
        border-right: solid 1pt grey;
    }
    td:nth-child(odd):not(:first-child) {
        background-color: shade(#fff,   0%);
    }
    td:nth-child(even) {
        background-color: shade(#fff,  5%);
    }
}

table.labels-row1 {
    border-collapse: collapse;
    border: 0;

    thead {
        display: table-header-group;
        font-size: 90%;
        font-weight: bold;

        padding-bottom: 3pt;
        border-bottom: solid 1pt grey;
    }

    tbody tr {
        &:nth-child(even) {
            background-color: shade(#fff,   0%);
        }
        &:nth-child(odd) {
            background-color: shade(#fff,  5%);
        }
    }
}


.xxx { font-weight: bold; font-family: monospace; color: red; }

div[center] {
    display: block;
    width: 100%;
    text-align: center;
    /*border: solid;*/
}

div[center] > * {
    display: inline-block;
    margin-top: 0;
    margin-bottom: 0;

}

.space_in_code {
    /*display: inline-block;*/
    background-color: white;
    /*border: solid 1px red;*/
}


div.float_top {
    float: bottom;
}

div.float_bottom {
    float: bottom;
}
pre code.output {
    /*background-color: turquoise;*/
}

q {
    ::before {
        // content: '\0201C';
    }

    ::after {
        // content: '\0201D';
    }
}


span.impname, code {
    word-wrap: normal;
}

svg.hasse text { font-family: monospace !important;}

div.proof {
    &::before {
        content: 'Proof: ';
        font-style: italic;
    }

    &::after {
        break-before: avoid;
        content: '∎'
    }
}

div.abstract {
    font-weight: bold;
    font-size: smaller;
}

figure figure.subfloat {
    display: inline-block;
    margin: 0;
    &:not(:first-of-type)  {
        margin-left: 2em;
    }
}

div.wrapfigure {
    float: right;
    clear: right;

    figure {
        margin-right: 0;
        margin-left: 1em;
        margin-bottom: 0.5em;
        margin-top: 0.5em;
    }
}

div.author {
    text-align: center;
}

h1.article_title {
    font-variant: normal;
}

cite {
    display: block;
    font-style: normal;
    font-size: smaller;
    line-height: @line-height * 1.2;
}
cite + cite {
    padding-bottom: 0.5em;
}

cite[id^='bib:'] {
    counter-increment: bib;
}
cite[id^='bib:']::before {
    content: '[' counter(bib) '] ';
    font-style: normal;
}

/* abstract */
cite blockquote { display: none; }


section > svg {
    max-width: 100%;
}

#bibliography_entries { display: none;}
