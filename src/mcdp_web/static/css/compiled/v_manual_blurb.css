/*



    -----------------


    -----------------






        Automatically created ---  do not modify 


    -----------------


    -----------------


    -----------------


    -----------------



*/#version-v_manual_blurb {
  border: solid 1px red;
}
body > p:first-of-type::before {
  content: 'Stylesheet: ' v_manual_blurb;
}
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote::before,
blockquote::after,
q::before,
q::after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* basics (after reset) */
ul {
  list-style-type: disc;
  list-style-position: inside;
}
ol {
  list-style-type: decimal;
  list-style-position: inside;
}
ul ul,
ol ul {
  list-style-type: circle;
  list-style-position: inside;
  margin-left: 15px;
}
ol ol,
ul ol {
  list-style-type: lower-latin;
  list-style-position: inside;
  margin-left: 15px;
}
li {
  padding-left: 0;
}
q::before {
  content: '“';
}
q::after {
  content: '”';
}
pre,
code {
  font-family: monospace;
}
dt {
  display: inline;
  font-weight: bold;
}
dl {
  margin-left: 2em;
}
dd {
  margin-left: 1em;
}
li {
  margin-top: 3pt;
}
strong {
  font-weight: bold;
}
blockquote {
  font-size: 100%;
}
em {
  font-style: italic;
}
h1.draft,
h2.draft,
h3.draft {
  color: red;
}
.figcontent {
  margin: 0;
  padding: 0;
}
@media screen {
  div.caption-left figure {
    display: table;
  }
  div.caption-left figure > figcaption {
    display: inline-block;
    margin-right: 3em;
  }
  div.caption-left figure > .figcontent {
    display: table-cell;
  }
  div.caption-right figure {
    display: table-row;
  }
  div.caption-right figure > figcaption {
    display: inline-block;
    margin-left: 3em;
  }
  div.caption-right figure > .figcontent {
    display: table-cell;
  }
}
h2 code:first-of-type::before,
h3 code:first-of-type::before,
h4 code:first-of-type::before,
ul.toc code:first-of-type::before {
  content: '(';
  font-weight: normal;
  font-family: serif;
}
h2 code:not(:last-of-type)::after,
h3 code:not(:last-of-type)::after,
h4 code:not(:last-of-type)::after,
ul.toc code:not(:last-of-type)::after {
  content: ', ';
  font-weight: normal;
  font-family: serif;
}
h2 code:last-of-type::after,
h3 code:last-of-type::after,
h4 code:last-of-type::after,
ul.toc code:last-of-type::after {
  content: ')';
  font-weight: normal;
  font-family: serif;
}
.chapter_toc {
  display: none;
}
.toc a {
  text-decoration: none;
}
/************ TOC ***************/
@media screen {
  ul.toc {
    column-count: 2;
    column-gap: 20px;
  }
  ul#main_toc > li > ul > li {
    padding-top: 2pt;
  }
  ul#main_toc > li > ul > li > ul {
    margin-top: 1pt;
    margin-bottom: 1pt;
  }
}
@media print {
  /** two-column format */
  ul.toc {
    column-count: 2;
    column-gap: 20px;
  }
  /** add page numbers for the first two */
  ul#main_toc > li > a::after {
    content: leader('.') target-counter(attr(href), page);
    font-weight: bold;
  }
  ul#main_toc > li > ul > li > a::after {
    content: leader('.') target-counter(attr(href), page);
  }
}
ul#main_toc ul {
  margin-left: 0;
}
ul#main_toc ul ul {
  margin-left: 0;
}
ul#main_toc ul ul li {
  display: inline;
}
ul#main_toc ul ul li a {
  color: gray !important;
}
ul#main_toc ul ul li a span.toc_number {
  display: none;
}
ul#main_toc ul ul li a span.toc_name::before {
  margin-right: 3pt;
  content: '⟡';
  /*◇';*/
  font-family: 'Cambria' !important;
  font-size: 6pt;
  /*padding-bottom: 5pt !important;*/
  /*border: solid 1px red;*/
  /*margin-top: -20pt !important;*/
  /*display: inline;*/
}
ul#main_toc ul ul li:first-child a span.toc_name::before {
  content: '';
  margin: 0;
}
/* first header down is highlighted */
ul.chapter_toc > li > a {
  font-weight: bold;
}
/* below numbers are erased */
ul.chapter_toc > li > ul > li > a.toc_link > span.toc_number {
  display: none;
}
ul.chapter_toc > li > ul > li > a.toc_link > span.toc_name::before {
  content: '•';
  margin-right: 0.5em;
}
/* keywords appearing in headers */
#maintoc code {
  /*color: red !important;*/
  font-size: 7pt !important;
  color: #a2a2a2 !important;
}
ul.toc,
ul.toc ul {
  padding: 0;
  margin-left: 1em;
}
ul.toc li {
  padding: 0;
  margin: 0;
}
ul#main_toc > li {
  padding-bottom: 1em;
}
ul#main_toc > li > ul {
  padding-top: 4pt;
}
ul#main_toc > li > a span.toc_name {
  font-weight: bold;
}
ul#main_toc > li > a > span.toc_number {
  font-weight: bold;
}
ul#main_toc > li > a > span.toc_number ::before {
  content: 'Chapter ';
  font-weight: bold;
}
ul.toc,
ul.toc li,
ul.toc ul {
  margin: 0;
  padding: 0;
}
ul#main_toc > li > a[href^='#part:'] {
  display: block;
  font-weight: bold;
  text-align: center;
  color: black !important;
}
ul#main_toc > li > a[href^='#part:'] ::before {
  content: 'Part ? – ';
  content: 'Part ' target-counter(attr(href), part) ' – ';
  font-weight: bold;
}
ul#main_toc > li > a[href^='#part:'] ::after {
  content: none !important;
}
/*prince-text-replace: "ffi" "\fb03" "fi" "\fb01" "ffl" "\fb04" "fl" "\fb02" "ff" "\fb00";*/
/*font-variant: prince-opentype(onum) prince-opentype(liga);*/
/*pre, pre code { font-family:"Consolas", "Anka/Coder Narrow" !important; }*/
/* ⟨ */
span.OpenBraceKeyword,
span.CloseBraceKeyword,
span.PlaceholderLabel {
  font-family: "Cambria Math" !important;
}
body {
  font-family: STIX, Times, monospace;
  font-variant: prince-opentype(kern, liga, dlig, clig, calt);
  font-kerning: normal;
}
@font-face {
  font-family: monospace;
  src: local("Anka/Coder Narrow");
}
code {
  font-family: monospace, Cambria, "Cambria Math";
}
@font-face {
  font-family: STIX;
  font-style: normal;
  font-weight: normal;
  src: local("STIX General");
}
@font-face {
  font-family: STIX;
  font-style: normal;
  font-weight: bold;
  src: local("STIX General Bold");
}
@font-face {
  font-family: STIX;
  font-style: italic;
  font-weight: normal;
  src: local("STIX General Italic");
}
@font-face {
  font-family: STIX;
  font-style: italic;
  font-weight: bold;
  src: local("STIX General Bold Italic");
}
body {
  /*padding-left: 3em;*/
  /*width: 50em;*/
}
pre {
  background-color: #eee;
  white-space: pre-wrap;
  margin-left: 2em;
  /*margin-top: 2em;*/
  padding: 10px;
  border-radius: 10px ;
  /*display: inline-block;*/
  margin-right: 1em;
  /*white-space: pre-wrap;                 /* CSS3 browsers  */
  /*white-space: -moz-pre-wrap !important; /* 1999+ Mozilla  */
  /*white-space: -pre-wrap;                /* Opera 4 thru 6 */
  /*white-space: -o-pre-wrap;              /* Opera 7 and up */
  /*word-wrap: break-word;                 /* IE 5.5+ and up */
}
@media screen {
  pre {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  }
}
pre.error,
pre.DPSemanticError,
pre.DPSyntaxError {
  color: red;
  font-weight: bold;
  white-space: pre-wrap;
}
.ndp_graph_expand,
.ndp_graph_enclosed,
.ndp_graph_normal,
.ndp_graph_templatized,
.ndp_graph_templatized_labeled,
.template_graph_enclosed {
  max-width: 100%;
  /*height: auto;*/
}
/* This screws up wkhtomlpdf */
@media screen {
  .ndp_graph_expand,
  .ndp_graph_enclosed,
  .ndp_graph_normal,
  .ndp_graph_templatized,
  .ndp_graph_templatized_labeled,
  .template_graph_enclosed {
    height: auto;
  }
}
span.label_outside {
  display: block;
  font-size: 6pt;
  letter-spacing: 0.4pt;
  font-family: "Andale Mono", monospace;
  text-align: left;
  padding-left: 1em;
  padding-bottom: 2pt;
  font-weight: bold;
  color: gray;
}
span.label_outside + * {
  page-break-before: avoid;
}
pre span.label_inside {
  display: none;
  float: right;
  font-style: italic;
  border-radius: 10px ;
  /*border: solid 1px black; */
  background-color: #eee;
  padding: 5px;
  padding-left: 1em;
  padding-right: 1em;
  margin-top: -1.8em;
  margin-right: 1em;
}
/*svg text {color: red !important;}
svg { border: solid 1px red; }*/
td br.added_before_pre {
  display: none;
}
/* sometimes we want to text-align: left; the entire pre */
pre {
  text-align: left;
}
pre.console {
  background-color: black;
  color: #ccf;
  display: inline-block;
}
pre.console .console_sign {
  color: #cfc;
}
pre.console .program {
  color: #cff;
}
pre.console .program_command {
  color: #cff;
}
/*ol + h4, ul + h4 {color: red;}*/
h4::after {
  content: ':';
}
/*ul { margin-bottom: 1em; border: solid; clear: left; margin-left:0; }
li {border: solid 1px red;}
*/
h4 {
  font-size: 100%;
  font-style: italic;
  font-weight: normal;
  margin-top: 0.5em;
  /*float: left;
	clear: left;

	margin: 0; padding: 0;
	margin-right: 0.34em;*/
  /*
    font-size: 1em; margin: 1em 0;


	display: run-in;
	 float: left;
    clear: both;*/
  /*margin: 0 0.5em 0 0;*/
  /*border : solid;*/
}
/*h4 + p {display: inline-block;}*/
/* fix markdonw extra */
div.latex_env p {
  display: inline;
}
div.latex_env {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.errored {
  /*border: solid 2px red !important;*/
  /*padding: 3px !important;*/
  /*background-color: red;*/
}
.duplicated-id {
  color: red;
}
.href-invalid {
  color: red;
}
.href-replaced {
  background-color: yellow;
}
.error {
  color: red;
}
span.Unit,
span.Nat,
span.Int,
span.Rcomp {
  color: #ac5600;
}
span.ValueExpr,
span.IntegerFraction,
span.NatConstant,
span.RcompConstant {
  color: #cc6600;
}
span.RcompUnit {
  color: #cc6600 ;
}
span.MCDPKeyword,
span.SubKeyword,
span.CompactKeyword,
span.AbstractKeyword,
span.TemplateKeyword,
span.ForKeyword,
span.UsingKeyword,
span.ImplementsKeyword,
span.LoadKeyword,
span.CodeKeyword,
span.FromLibraryKeyword,
span.leq,
span.geq,
span.OpKeyword,
span.eq,
span.plus,
span.times,
span.DPWrapToken,
span.ImplementedbyKeyword,
span.FromCatalogueKeyword,
span.MCDPTypeKeywor,
span.InstanceKeyword,
span.CoproductWithNamesChooseKeyword,
span.MCDPTypeKeyword,
span.FromLibraryKeyword,
span.CoproductWithNamesChooseKeyword,
span.MCDPKeyword,
span.SubKeyword,
span.CompactKeyword,
span.AbstractKeyword,
span.TemplateKeyword,
span.ForKeyword,
span.UsingKeyword,
span.LoadKeyword,
span.CodeKeyword,
span.leq,
span.geq,
span.OpKeyword,
span.eq,
span.plus,
span.times,
span.exponent,
span.product,
span.sum,
span.OpenBraceKeyword,
span.CloseBraceKeyword,
span.comma,
span.DPWrapToken,
span.ImplementedbyKeyword,
span.FromCatalogueKeyword,
span.MCDPTypeKeyword,
span.InstanceKeyword,
span.FlattenKeyword,
span.ApproxKeyword,
span.TakeKeyword,
span.SpecializeKeyword,
span.FinitePosetKeyword,
span.ProductKeyword,
span.UncertainKeyword,
span.UpperSetsKeyword,
span.LowerSetsKeyword,
span.EmptySetKeyword,
span.PowerSetKeyword,
span.IntervalKeyword,
span.UpperSetFromCollectionKeyword,
span.LowerSetFromCollectionKeyword,
span.TopKeyword,
span.BottomKeyword,
span.SingleElementPosetKeyword,
span.SpaceCoproductKeyword,
span.IgnoreKeyword,
span.SolveModelKeyword,
span.AnyOfKeyword,
span.MaximalsKeyword,
span.MinimalsKeyword,
span.IgnoreResourcesKeyword,
span.ProcName,
span.ApproxUpperKeyword,
span.ApproxLowerKeyword,
span.VarStatementKeyword,
span.GenericOperationName,
span.EversionKeyword,
span.AddBottomKeyword,
span.LBRACE,
span.RBRACE,
span.LBRACKET,
span.RBRACKET,
span.plus_or_minus,
span.percent,
span.LEFTRIGHTARROW,
span.AssertEqualKeyword,
span.AssertLEQKeyword,
span.AssertGEQKeyword,
span.AssertLTKeyword,
span.AssertGTKeyword,
span.AssertNonemptyKeyword,
span.AssertEmptyKeyword,
span.ConstantKeyword,
span.BetweenKeyword,
span.BetweenAndKeyword {
  font-weight: bold;
  color: #00a;
}
span.MAPSTO {
  font-weight: bold;
  color: darkred;
}
span.MAPSFROM {
  font-weight: bold;
  color: darkgreen;
}
span.VName {
  color: blue;
}
/* constant */
span.CName {
  color: #333;
}
span.SetNameRValue > span.RName {
  color: darkred;
}
span.SetNameFValue > span.FName {
  color: darkgreen;
}
span.SumResources > span.RName {
  color: darkred;
}
span.SumFunctions > span.FName {
  color: darkgreen;
}
span.DerivFunctionName {
  color: darkgreen;
}
span.DerivResourceName {
  color: darkred;
}
span.ProvideKeyword,
span.RequireKeyword {
  font-weight: bold;
}
span.ProductWithLabelsLabel,
span.IndexLabel {
  color: #cc6600;
}
/* f provided by s */
span.ProvidedByKeyword,
span.Function > span.FName {
  color: darkgreen;
}
/* f required by s */
span.RequiredByKeyword,
span.Resource > span.RName {
  color: darkred;
}
/* required rname - this is a function inside */
span.RequiredKeyword,
span.NewResource > span.RName {
  color: darkgreen;
}
/* provided fname - this is a resource inside */
span.ProvidedKeyword,
span.NewFunction > span.FName {
  color: darkred;
}
/* provides f [m] */
span.ProvideKeyword {
  color: darkgreen;
}
span.FunStatement > span.FName,
span.FunShortcut1 > span.FName,
span.FunShortcut1m > span.FName,
span.FunShortcut2 > span.FName,
span.FunShortcut3 > span.FName,
span.FunShortcut4 > span.FName,
span.FunShortcut5 > span.FName {
  color: darkgreen;
}
/* requires r [m] */
/* requires r >= ... */
/* requires r1, r2*/
span.RequireKeyword {
  color: darkred;
}
span.ResStatement > span.RName,
span.ResShortcut1 > span.RName,
span.ResShortcut1m > span.RName,
span.ResShortcut2 > span.RName,
span.ResShortcut3 > span.RName,
span.ResShortcut4 > span.RName,
span.ResShortcut5 > span.RName {
  color: darkred;
}
span.SetNameRValue > span.SetNameGenericVar {
  color: darkred;
}
span.SetNameFValue > span.SetNameGenericVar {
  color: darkgreen;
}
/* There is a bug that prevents this from working correctly. */
/* span.ImpName { color: #cc6600; } */
span.FuncName {
  color: #cc6600 ;
}
span.DPName,
span.NDPName,
span.PosetName,
span.TemplateName,
span.TemplateParamName,
span.FinitePosetElement,
span.SingleElementPosetTag {
  color: #a0a;
}
span.DPTypeName,
span.DPVariableRef {
  color: #00f;
  font-weight: bold;
}
span.comment {
  color: grey;
}
span.line-gutter {
  margin-right: 1em;
  color: grey;
}
span.PlaceholderLabel {
  color: grey;
  /*font-style: italic;*/
}
span.CommentModel {
  color: purple ;
  font-weight: bold;
}
span.CommentFun {
  color: darkgreen;
  font-weight: bold;
}
span.CommentRes {
  color: darkred;
  font-weight: bold;
}
/* Special case: ≤ does not look good in regular font Courier */
span.leq,
span.geq,
span.OpenBraceKeyword,
span.CloseBraceKeyword {
  /*font-family: Courier, monospace;*/
  font-weight: bold;
}
span.leq,
span.geq {
  font-family: "FreeSerif";
  font-weight: normal !important;
}
span.sum {
  font-family: "FreeSerif";
  font-weight: bold;
}
span.semantic_error {
  background-color: pink;
}
span.language_warning {
  background-color: yellow !important;
}
span.suggestion {
  background-color: white;
}
span.has_tooltip {
  /*border: solid 1px red;*/
}
div.tooltip {
  position: absolute;
  visibility: hidden;
}
span.has_tooltip:hover div.tooltip {
  visibility: visible;
  background-color: yellow !important;
  padding: 5px;
}
span.indentation {
  border-left: solid 10px white !important;
  margin-left: -10px !important;
}
@media screen {
  /* unsupported by prince */
  pre,
  code {
    tab-size: 4;
  }
}
code.keyword {
  color: #00a;
  font-weight: bold;
}
/* allow for manual */
code.FName {
  color: darkgreen;
}
code.RName {
  color: darkred;
}
span.ImpName {
  color: #cc7a00;
}
code.fvalue span.ValueExpr,
code.fvalue span.RcompUnit {
  color: darkgreen;
}
code.rvalue span.ValueExpr,
code.rvalue span.RcompUnit {
  color: darkred;
}
/* for catalogue */
.CatalogueFun span.ValueExpr,
.CatalogueFun span.RcompUnit {
  color: darkgreen !important;
}
.CatalogueRes span.ValueExpr,
.CatalogueRes span.RcompUnit {
  color: darkred !important;
}
p,
div.latex_env,
div.minipage {
  line-height: 1.15;
}
p {
  margin-bottom: 3pt;
  margin-top: 3pt;
}
figcaption {
  line-height: 1.15;
}
blockquote {
  margin-left: 3em;
}
h1 {
  font-weight: bold;
  text-align: center;
}
h2 {
  font-weight: bold;
}
body {
  font-size: 10pt;
}
/* Good for safari */
@media screen {
  pre {
    box-shadow: none;
  }
}
.ndp_graph_expand,
.ndp_graph_enclosed,
.ndp_graph_normal,
.ndp_graph_templatized,
.ndp_graph_templatized_labeled,
.template_graph_enclosed {
  max-width: 50em;
}
span.language_warning {
  background-color: inherit !important;
}
p {
  max-width: 40em;
}
code {
  page-break-inside: avoid;
}
pre,
code {
  font-size: 8pt;
}
body {
  text-align: justify;
}
h1 {
  font-size: 15pt;
  color: black !important;
}
h2 {
  font-size: 12pt;
  color: black !important;
}
h3 {
  font-size: 10pt;
}
p code {
  font-size: 8pt;
}
pre {
  display: inline-block;
}
pre .label {
  font-size: 8px;
  font-style: normal;
}
pre {
  margin-left: 0.4em !important;
  border-radius: 4px !important;
  padding: 5px !important;
}
/* without labels */
pre:not(.has_label) {
  /*margin-top: 0 !important;*/
}
/* with labels */
pre.has_label {
  margin-top: 0;
}
p {
  margin-top: 0.3em;
  margin-bottom: 0.3em;
}
h1,
h2,
h3 {
  margin-bottom: 0.3em;
  margin-top: 0.3em;
}
pre code {
  margin: 0;
}
pre {
  padding: 3pt;
}
a {
  color: #005;
}
/*ul, li {padding: 0; padding-left: 0em !important;}*/
ul.toc {
  padding-left: 0;
}
li {
  margin: 0;
  margin-left: 0;
}
/*.toc ul ul li { display: none; }*/
/********** headings *********/
#toc-heading {
  text-align: center;
}
h2 {
  margin-top: 2em !important;
}
h3 {
  color: #615d5d;
  font-style: normal !important;
  font-weight: bold;
  padding-top: 1em;
  width: 100%;
  padding-bottom: 3pt;
  border-bottom: solid 0.5pt grey;
}
#toc-heading {
  font-variant: small-caps;
}
h1:not(#booktitle) ::before {
  content: 'Chapter ';
}
/***** end headings *****/
/******  latex ****/
div.definition::before {
  font-weight: bold;
  content: 'Definition ' counter(definition) '.';
}
div.example::before {
  font-weight: bold;
  content: 'Example ' counter(example) '.';
}
div.remark::before {
  font-weight: bold;
  content: 'Remark ' counter(remark) '.';
}
div.problem::before {
  font-weight: bold;
  content: 'Problem ' counter(problem) '.';
}
div.lemma::before {
  font-weight: bold;
  content: 'Lemma ' counter(lemma) '.';
}
div.proposition::before {
  font-weight: bold;
  content: 'Proposition ' counter(proposition) '.';
}
div.theorem::before {
  font-weight: bold;
  content: 'Theorem ' counter(theorem) '.';
}
.latex_env span.latex_env_label::before {
  content: ' (';
}
.latex_env span.latex_env_label::after {
  content: ') ';
}
/****** end latex ****/
/**** misc ***/
body {
  hyphens: auto;
}
/* No decoration for links */
a {
  text-decoration: none;
  color: darkblue;
}
pre {
  margin-bottom: 0;
}
p + pre {
  margin-top: 0.7em;
}
pre + br + pre {
  margin-top: 0.3em;
  /*border: solid 1px red;*/
  /*float: left; clear: left;*/
}
div.todo-wrap {
  text-align: center;
}
p.todo {
  display: inline-block;
  background-color: #fdd;
}
p.todo::before {
  content: 'TODO: ';
  font-weight: bold;
}
figure:not(.subfloat) {
  /*counter-increment: figure;*/
  counter-reset: subfloat;
}
figure.subfloat {
  counter-increment: subfloat;
}
figure[id^='fig:'] {
  counter-increment: figure;
}
figure.table {
  counter-increment: table;
}
div.example {
  counter-increment: example;
}
div.remark {
  counter-increment: remark;
}
div.definition {
  counter-increment: definition;
}
div.lemma {
  counter-increment: lemma;
}
div.proposition {
  counter-increment: proposition;
}
div.theorem {
  counter-increment: theorem;
}
div.problem {
  counter-increment: problem;
}
figure[id^='code:'] {
  counter-increment: listing;
}
figure[id^='code:'] figcaption:not(:empty)::before {
  content: 'Listing ' counter(listing) '. ';
}
figure[id^='code:'] {
  display: inline-block;
  text-align: center;
}
figure[id^='fig:'] {
  /*border: solid blue;*/
  text-align: center;
}
figure[id^='code:'] figcaption {
  text-align: center;
  /*border: solid;*/
  width: 100%;
}
figure[id^='code:'] figcaption:not(:empty) {
  text-align: left;
  max-width: 30em;
}
figure[id^='code:'] figcaption:empty::before {
  content: 'Listing ' counter(listing);
}
/* Not empty caption */
figure.table {
  display: inline-block;
}
figure.table figcaption {
  padding-left: 2em;
  padding-right: 2em;
  width: 100%;
  text-align: center;
  font-variant: small-caps;
  letter-spacing: 0.24pt;
  font-size: 10pt;
}
/*@num-eq: target-counter(attr(href), listing);
@ref-eq: '(' @num-eq ')';
*/
figure[id^='tab:'] > figcaption:not(:empty)::before {
  content: 'Table' '\0000a0' counter(table) '. ';
}
figure[id^='tab:'] > figcaption:empty::before {
  content: 'Table' '\0000a0' counter(table);
}
figure[id^='fig:'] > figcaption:not(:empty) {
  text-align: justify;
}
figure[id^='fig:'] > figcaption:not(:empty)::before {
  content: 'Figure' '\0000a0' counter(figure) '. ';
}
figure[id^='fig:'] > figcaption:empty::before {
  content: 'Figure' '\0000a0' counter(figure);
}
figure[id^='subfig:'] > figcaption:not(:empty)::before {
  content: '(' counter(subfloat, lower-alpha) ')' '\0000a0';
}
figure[id^='subfig:'] > figcaption:empty::before {
  content: '(' counter(subfloat, lower-alpha) ')';
}
figure[id^='subfig:'] > figcaption:empty {
  text-align: center;
}
/* Empty caption */
figcaption {
  font-size: smaller;
}
a[href^='#code:']:empty.only-number::before {
  content: '♦';
  content: target-counter(attr(href), listing);
}
a[href^='#code:']:empty:not(.only-number)::before {
  content: 'Listing' '\0000a0' '♦';
  content: 'Listing' '\0000a0' target-counter(attr(href), listing);
}
a[href^='#fig:']:empty.only-number::before {
  content: '♦';
  content: target-counter(attr(href), figure);
}
a[href^='#fig:']:empty:not(.only-number)::before {
  content: 'Figure' '\0000a0' '♦';
  content: 'Fig.' '\0000a0' target-counter(attr(href), figure);
}
a[href^='#subfig:']:empty.only-number::before {
  content: '♦';
  content: target-counter(attr(href), figure) target-counter(attr(href), subfloat, lower-alpha);
}
a[href^='#subfig:']:empty:not(.only-number)::before {
  content: 'Fig.' '\0000a0' '♦' '?';
  content: 'Fig.' '\0000a0' target-counter(attr(href), figure) target-counter(attr(href), subfloat, lower-alpha);
}
a[href^='#exa:']:empty.only-number::before {
  content: '♦';
  content: target-counter(attr(href), example);
}
a[href^='#exa:']:empty:not(.only-number)::before {
  content: 'Example' '\0000a0' '♦';
  content: 'Example' '\0000a0' target-counter(attr(href), listing);
}
a[href^='#tab:']:empty:not(.only-number)::before {
  content: 'Table♦';
  content: 'Table\0000a0' target-counter(attr(href), table);
}
a[href^='#tab:']:empty.only-number::before {
  content: '♦';
  content: target-counter(attr(href), table);
}
a[href^='#rem:']:empty::before {
  content: 'Remark.♦';
  content: 'Remark\0000a0' target-counter(attr(href), remark);
}
a[href^='#lem:']:empty::before {
  content: 'Lemma.♦';
  content: 'Lemma\0000a0' target-counter(attr(href), lemma);
}
a[href^='#def:']:empty::before {
  content: 'Def.♦';
  content: 'Def.\0000a0' target-counter(attr(href), definition);
}
a[href^='#prop:']:empty::before {
  content: 'Prop.♦';
  content: 'Prop.\0000a0' target-counter(attr(href), proposition);
}
a[href^='#prob:']:empty::before {
  content: 'Problem.♦';
  content: 'Problem\0000a0' target-counter(attr(href), problem);
}
a[href^='#thm:']:empty:not(.only-number)::before {
  content: 'Theorem♦';
  content: 'Theorem\0000a0' target-counter(attr(href), theorem);
}
a[href^='#thm:']:empty.only-number::before {
  content: '♦';
  content: target-counter(attr(href), theorem);
}
a[href^='#sub:']:empty:not(.only-number)::before {
  content: 'Subsection♦.♦';
  content: 'Subsection\0000a0' target-counter(attr(href), section) '.' target-counter(attr(href), subsection);
}
a[href^='#sub:']:empty.only-number::before {
  content: '♦.♦';
  content: target-counter(attr(href), section) '.' target-counter(attr(href), subsection);
}
a[href^='#subsub:']:empty::before {
  content: 'Section♦';
  content: 'Section\0000a0' target-counter(attr(href), section) '.' target-counter(attr(href), subsection) '-' target-counter(attr(href), subsubsection, upper-alpha);
}
/** maybe chapter **/
/** Very important - otherwise counters are local to divs,
    and not robust to errors with divs */
body {
  counter-reset: part table listing bib section appendix subsection subsubsection figure example remark definition proposition lemma theorem problem ;
}
h1 {
  counter-reset: subsection subsubsection;
}
h1:not([nonumber])[id^='part:'] {
  counter-increment: part;
}
h1:not([nonumber])[id^='sec:'] {
  counter-increment: section;
}
h1:not([nonumber])[id^='app:'] {
  counter-increment: appendix;
}
h1 {
  margin-bottom: 2em;
}
/*h2 :not([nonumber]) */
/*h2:not([nonumber]) { }*/
/*border: solid;*/
h2 {
  counter-reset: subsubsection;
}
h2:not([nonumber]) {
  counter-increment: subsection;
}
h3:not([nonumber]) {
  counter-increment: subsubsection;
}
a[href^='#sec:']::before {
  content: 'Chapter♦';
  content: 'Chapter\0000a0' target-counter(attr(href), section);
}
ul.toc a[href^='#app:']::before {
  /* mdash: — ndahs:  –; */
  content: 'Appendix\0000a0' '♦' ' –';
  content: 'Appendix\0000a0' target-counter(attr(href), appendix, upper-alpha) ' –';
  font-weight: bold;
}
ul.toc a[href^='#sec:']::before {
  /* mdash: — ndahs:  –; */
  content: 'Chapter\0000a0' '♦' ' –';
  content: 'Chapter\0000a0' target-counter(attr(href), section) ' –';
  font-weight: bold;
}
h1:not([nonumber])[id^="app:"]::before {
  content: 'Appendix\0000a0' counter(appendix, upper-alpha);
  display: block;
  font-variant: small-caps;
  font-size: smaller;
  margin-bottom: 0.5em;
}
h1:not([nonumber])[id^="sec:"]::before {
  content: 'Chapter\0000a0' counter(section);
  display: block;
  font-variant: small-caps;
  font-size: smaller;
  margin-bottom: 0.5em;
}
.toc_number {
  display: none;
}
h1[nonumber]::before {
  /*content: '(u)';*/
}
ul.toc a[href^='#sub:']::before {
  content: '♦.♦' ' –';
  content: target-counter(attr(href), section) '.' target-counter(attr(href), subsection) ' –';
}
h2:not([nonumber])[id^='sub:']::before {
  content: counter(section) '.' counter(subsection) '. ';
}
h2:not([nonumber])[id^='appsub:']::before {
  content: counter(appendix, upper-alpha) '.' counter(subsection) '. ';
}
ul.toc a[href^='#subsub:']::before {
  display: none;
  content: none;
}
h3:not([nonumber])::before {
  /*content: counter(section) '.' counter(subsection) '-' counter(subsubsection, upper-alpha) '. ';*/
  content: counter(subsubsection, lower-alpha) ') ';
}
/*

h1:not([nonumber])::after {
    content: '{css_computed:"' counter(section)'"}';
    color: green;
}
h2:not([nonumber])::after {
    content: '{css_computed:"' counter(section)'.'counter(subsection) '"}';
    color: green;
}
h3:not([nonumber])::after {
    color: green;
    content: '{css_computed:"' counter(section)'.'counter(subsection)'-'counter(subsubsection, upper-alpha) '"}';
}

*/
/*TODO: make preprocessing into code*/
/*f,r { font-family: monospace; font-size: 80%;}*/
.f {
  color: darkgreen;
}
.r {
  color: darkred;
}
.imp {
  color: darkorange;
}
.impname {
  color: darkorange;
}
.keyword.f {
  color: darkgreen;
}
.keyword.r {
  color: darkred;
}
div.figure {
  border: solid;
}
.Fcolor {
  color: darkgreen;
}
.Rcolor {
  color: darkred;
}
.uline {
  text-decoration: underline;
}
div.fbox {
  border: solid 1pt black;
  padding: 3pt;
}
div.center,
div.centering {
  text-align: center;
}
a[href^='#bib:']:empty::before {
  content: '[' '♦' ']';
  content: '[' target-counter(attr(href), bib) ']';
}
a[href^='#bib:']:not(:empty)::before {
  content: '[' '♦' ', ';
  content: '[' target-counter(attr(href), bib) ', ';
}
a[href^='#bib:']:not(:empty)::after {
  content: ']';
}
figure.table figcaption {
  padding-bottom: 0.3em;
}
figure.table td:not(:first-child) {
  padding-left: 1em;
}
div.table-wrap {
  text-align: center;
}
/**** col2, etc . ***/
div.colN-wrap {
  text-align: center;
  /*border: solid 1px blue;*/
}
div.colN-wrap table {
  display: inline-block;
  /*border: solid 1px red;*/
}
div.colN-wrap table td {
  padding-left: 0.7em;
  padding-right: 0.7em;
  /*border: solid 1px blue;*/
}
table.col2 td {
  width: fill-available;
}
table.col2 {
  max-width: 100%;
  /*text-align: center;*/
}
figcaption {
  margin-top: 0.7em;
}
table.col2 td {
  padding-bottom: 0;
  vertical-align: middle;
  margin-left: auto;
  margin-right: auto;
}
h2,
h3,
h4 {
  clear: both;
}
table.labels-col1 {
  border-collapse: collapse;
  border: 0;
}
table.labels-col1 td:first-child {
  font-size: 90%;
  font-weight: bold;
}
table.labels-col1 td:first-child {
  padding-right: 3pt;
  border-right: solid 1pt grey;
}
table.labels-col1 td:nth-child(odd):not(:first-child) {
  background-color: #ffffff;
}
table.labels-col1 td:nth-child(even) {
  background-color: #f2f2f2;
}
table.labels-row1 {
  border-collapse: collapse;
  border: 0;
}
table.labels-row1 thead {
  display: table-header-group;
  font-size: 90%;
  font-weight: bold;
  padding-bottom: 3pt;
  border-bottom: solid 1pt grey;
}
table.labels-row1 tbody tr:nth-child(even) {
  background-color: #ffffff;
}
table.labels-row1 tbody tr:nth-child(odd) {
  background-color: #f2f2f2;
}
.xxx {
  font-weight: bold;
  font-family: monospace;
  color: red;
}
div[center] {
  display: block;
  width: 100%;
  text-align: center;
  /*border: solid;*/
}
div[center] > * {
  display: inline-block;
  margin-top: 0;
  margin-bottom: 0;
}
.space_in_code {
  /*display: inline-block;*/
  background-color: white;
  /*border: solid 1px red;*/
}
div.float_top {
  float: bottom;
}
div.float_bottom {
  float: bottom;
}
pre code.output {
  /*background-color: turquoise;*/
}
span.impname,
code {
  word-wrap: normal;
}
svg.hasse text {
  font-family: monospace !important;
}
div.proof::before {
  content: 'Proof: ';
  font-style: italic;
}
div.proof::after {
  break-before: avoid;
  content: '∎';
}
div.abstract {
  font-weight: bold;
  font-size: smaller;
}
figure figure.subfloat {
  display: inline-block;
  margin: 0;
}
figure figure.subfloat:not(:first-of-type) {
  margin-left: 2em;
}
div.wrapfigure {
  float: right;
  clear: right;
}
div.wrapfigure figure {
  margin-right: 0;
  margin-left: 1em;
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}
div.author {
  text-align: center;
}
h1.article_title {
  font-variant: normal;
}
cite {
  display: block;
  font-style: normal;
  font-size: smaller;
  line-height: 1.38;
}
cite + cite {
  padding-bottom: 0.5em;
}
cite[id^='bib:'] {
  counter-increment: bib;
}
cite[id^='bib:']::before {
  content: '[' counter(bib) '] ';
  font-style: normal;
}
/* abstract */
cite blockquote {
  display: none;
}
section > svg {
  max-width: 100%;
}
#bibliography_entries {
  display: none;
}
/* These are the fixes for printing / prince */
body {
  page: normal;
}
h1:not(#booktitle) {
  prince-page-group: start;
  string-set: current-header content();
}
section#part\:introduction\:section {
  page: part-introduction;
}
section#part\:domains\:section {
  page: part-domains;
}
section#part\:reference\:section {
  page: part-reference;
}
section#part\:math\:section {
  page: part-math;
}
section#part\:developers\:section {
  page: part-developers;
}
@page part-introduction:left {
  @left-top {
    background-color: #f1d6f9;
    content: ' ';
  }
  @left-middle {
    background-color: #f1d6f9;
    content: ' ';
  }
  @left-bottom {
    background-color: #f1d6f9;
    content: ' ';
  }
  @top-left-corner {
    background-color: #f1d6f9;
    content: ' ';
  }
  @bottom-left-corner {
    background-color: #f1d6f9;
    content: ' ';
  }
}
@page part-introduction:right {
  @right-middle {
    background-color: #f1d6f9;
    content: ' ';
  }
  @right-top {
    background-color: #f1d6f9;
    content: ' ';
  }
  @right-bottom {
    background-color: #f1d6f9;
    content: ' ';
  }
  @top-right-corner {
    background-color: #f1d6f9;
    content: ' ';
  }
  @bottom-right-corner {
    background-color: #f1d6f9;
    content: ' ';
  }
}
@page part-domains:left {
  @left-top {
    background-color: #d8d6f9;
    content: ' ';
  }
  @left-middle {
    background-color: #d8d6f9;
    content: ' ';
  }
  @left-bottom {
    background-color: #d8d6f9;
    content: ' ';
  }
  @top-left-corner {
    background-color: #d8d6f9;
    content: ' ';
  }
  @bottom-left-corner {
    background-color: #d8d6f9;
    content: ' ';
  }
}
@page part-domains:right {
  @right-middle {
    background-color: #d8d6f9;
    content: ' ';
  }
  @right-top {
    background-color: #d8d6f9;
    content: ' ';
  }
  @right-bottom {
    background-color: #d8d6f9;
    content: ' ';
  }
  @top-right-corner {
    background-color: #d8d6f9;
    content: ' ';
  }
  @bottom-right-corner {
    background-color: #d8d6f9;
    content: ' ';
  }
}
@page part-reference:left {
  @left-top {
    background-color: #d6f3f9;
    content: ' ';
  }
  @left-middle {
    background-color: #d6f3f9;
    content: ' ';
  }
  @left-bottom {
    background-color: #d6f3f9;
    content: ' ';
  }
  @top-left-corner {
    background-color: #d6f3f9;
    content: ' ';
  }
  @bottom-left-corner {
    background-color: #d6f3f9;
    content: ' ';
  }
}
@page part-reference:right {
  @right-middle {
    background-color: #d6f3f9;
    content: ' ';
  }
  @right-top {
    background-color: #d6f3f9;
    content: ' ';
  }
  @right-bottom {
    background-color: #d6f3f9;
    content: ' ';
  }
  @top-right-corner {
    background-color: #d6f3f9;
    content: ' ';
  }
  @bottom-right-corner {
    background-color: #d6f3f9;
    content: ' ';
  }
}
@page part-math:left {
  @left-top {
    background-color: #d9f9d6;
    content: ' ';
  }
  @left-middle {
    background-color: #d9f9d6;
    content: ' ';
  }
  @left-bottom {
    background-color: #d9f9d6;
    content: ' ';
  }
  @top-left-corner {
    background-color: #d9f9d6;
    content: ' ';
  }
  @bottom-left-corner {
    background-color: #d9f9d6;
    content: ' ';
  }
}
@page part-math:right {
  @right-middle {
    background-color: #d9f9d6;
    content: ' ';
  }
  @right-top {
    background-color: #d9f9d6;
    content: ' ';
  }
  @right-bottom {
    background-color: #d9f9d6;
    content: ' ';
  }
  @top-right-corner {
    background-color: #d9f9d6;
    content: ' ';
  }
  @bottom-right-corner {
    background-color: #d9f9d6;
    content: ' ';
  }
}
@page {
  @top {
    vertical-align: bottom;
    content: string(current-header);
    font-size: 10pt;
    font-variant: small-caps;
    padding-bottom: 10pt;
  }
}
@page :right {
  @top-right {
    vertical-align: bottom;
    font-size: 10pt;
    content: counter(page);
    padding-bottom: 10pt;
    padding-right: 5pt;
  }
}
@page :left {
  @top-left {
    vertical-align: bottom;
    font-size: 10pt;
    content: counter(page);
    padding-bottom: 10pt;
    padding-left: 5pt;
  }
}
@page :first {
  @top {
    content: none;
  }
  @top-right {
    content: none;
  }
}
h1[id^='part:'] {
  display: flow(part-string);
}
a {
  color: black !important;
}
/* only in the manual */
h1:not(#booktitle) {
  page-break-before: always;
}
td pre {
  margin-top: 0 !important;
  margin: 0 !important;
}
p + table {
  margin-top: 0.9em !important;
}
/*

pre {
    margin-left: auto !important;
    margin-right: auto !important;
}*/
#mine {
  text-align: center;
}
/*table {
    width: 100% !important;
}
*/
@media screen {
  body div > ul:not(.toc) {
    margin-left: 0em;
    padding-left: 2em;
    /*border : solid 1px blue;*/
    margin-top: 0.2em;
    margin-bottom: 0.2em;
  }
}
@media print {
  /* this is some thing weird, not very robust. Need div.document */
  body div > ul:not(.toc) {
    /*border : solid 1px blue;*/
    margin-left: 2em;
    /*prince wants */
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  ul.toc ul:not(.toc) {
    /*border : solid 1px red;*/
  }
}
footnote {
  float: footnote;
  font-size: smaller;
}
@page {
  @footnotes {
    border-top: solid black thin;
    margin-left: 1em;
    padding-top: 3pt;
    margin-top: 5pt;
  }
}
/* saves 75% of time */
/*ul.toc { display: none; }*/
/*span.MathJax_SVG { border: solid 1px red;  position: relative; left: -4em;}*/
/* fix this in Prince */
svg {
  max-width: 100%;
}
figcaption {
  page-break-before: avoid;
}
/*
@media print {
h1::after {
    margin-top: -3em;
    content: ' ';
    background-color: red;
    position: absolute;
    left: 3cm;
    width: 8cm;
    height: 3cm;
    display: block;
    top: 0;
}
*/
#main_toc ul,
#main_toc li {
  padding-left: 0 !important;
  margin-left: 0 !important;
}
#main_toc code.keyword {
  color: black;
}
@page {
  size: 6.125in 9.250in;
  margin-top: 1.7cm;
  margin-bottom: 0.312in;
}
@page :left {
  margin-left: 6.175mm;
  padding-left: 0.3825cm;
  margin-right: 1.7cm;
}
@page :right {
  margin-right: 6.175mm;
  padding-right: 0.3825cm;
  margin-left: 1.7cm;
}
@media screen {
  body {
    display: inline-block;
  }
  html {
    text-align: center;
  }
  body {
    margin-left: auto;
    margin-right: auto;
  }
  body {
    width: 360pt;
    /* A5 is  420pt × 595  */
    background-color: white;
    /** essentially these are our "page margins" **/
    border-right: solid 30pt white;
    border-left: solid 30pt white;
    margin-top: 0;
  }
  html {
    background-color: #eee;
    border-right: solid 1px gray;
  }
  /* zoom the page - equal to browser zoom */
  body {
    transform: scale(1.5);
    transform: scale(66.66666667%);
    transform-origin: top center;
  }
  /** add space for h1, in place of page breaks **/
  h1:not(#booktitle) {
    margin-top: 4em;
  }
}
/*



    -----------------


    -----------------






        Automatically created ---  do not modify 


    -----------------


    -----------------


    -----------------


    -----------------



*/