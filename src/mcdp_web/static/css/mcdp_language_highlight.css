/**/
span.Unit, span.Nat, span.Int, span.Rcomp  {  
    color: #aC5600;
}

span.ValueExpr, span.IntegerFraction { 
    color: #CC6600;
}

span.RcompUnit { color: #CC6600 ;}

  
span.MCDPKeyword,
span.SubKeyword,
span.CompactKeyword,
span.AbstractKeyword,
span.TemplateKeyword,
span.ForKeyword,
span.UsingKeyword,
span.LoadKeyword,
span.CodeKeyword,
span.FromLibraryKeyword,
span.leq, span.geq, span.OpKeyword, span.eq, span.plus, span.times, span.DPWrapToken,
span.ImplementedbyKeyword , span.FromCatalogueKeyword, span.MCDPTypeKeywor,
span.InstanceKeyword,
span.CoproductWithNamesChooseKeyword,
span.MCDPTypeKeyword,
span.FromLibraryKeyword,
span.CoproductWithNamesChooseKeyword,
span.MCDPKeyword,
span.SubKeyword,
span.CompactKeyword,
span.AbstractKeyword,
span.TemplateKeyword,
span.ForKeyword,
span.UsingKeyword,
span.LoadKeyword, span.CodeKeyword,
span.leq, span.geq, span.OpKeyword, span.eq, span.plus, span.times, span.exponent, span.product,
span.OpenBraceKeyword,
span.CloseBraceKeyword,
span.comma,
span.DPWrapToken,
span.ImplementedbyKeyword,  
span.FromCatalogueKeyword, 
span.MCDPTypeKeyword,
span.InstanceKeyword,
span.FlattenKeyword,
span.ApproxKeyword,
span.TakeKeyword,
span.SpecializeKeyword,
span.FinitePosetKeyword,
span.ProductKeyword,
span.UncertainKeyword,
span.UpperSetsKeyword,
span.MakeUpperSetsKyword,
span.PowerSetKeyword,
span.IntervalKeyword,
span.UpperSetFromCollectionKeyword,
span.TopKeyword,
span.BottomKeyword,
span.SingleElementPosetKeyword,
span.SpaceCoproductKeyword,
span.IgnoreKeyword,
span.SolveModelKeyword,
span.AnyOfKeyword,
span.MaximalsKeyword,
span.MinimalsKeyword,
span.IgnoreResourcesKeyword,
span.ProcName,
span.ApproxUpperKeyword,
span.ApproxLowerKeyword,
span.VarStatementKeyword,
span.GenericOperationName,
span.EversionKeyword,
span.LBRACE,
span.RBRACE
{ 
    font-weight: bold; 
    color: #00a;
}

span.VName { color: blue; }
/* constant */
span.CName { color: #333; 
}
span.SetNameRValue > span.RName { color: darkred; }
span.SetNameFValue > span.FName { color: darkgreen; }

span.DerivFunctionName { color: darkgreen; } 
span.DerivResourceName { color: darkred; }


span.ProvideKeyword, span.RequireKeyword  {
    font-weight: bold; 
    
} 

span.ProductWithLabelsLabel, span.IndexLabel  {
	color: #CC6600;
}

/* f provided by s */
span.ProvidedByKeyword,
span.Function > span.FName {
    color: darkgreen;
}

/* f required by s */
span.RequiredByKeyword,
span.Resource > span.RName {
    color: darkred;
}

/* required rname - this is a function inside */
span.RequiredKeyword,
span.NewResource > span.RName {
    color: darkgreen;
}

/* provided fname - this is a resource inside */
span.ProvidedKeyword,
span.NewFunction > span.FName {
    color: darkred;
}

/* provides f [m] */

span.ProvideKeyword {
    color: darkgreen;
}

span.FunStatement > span.FName,
span.FunShortcut1 > span.FName,
span.FunShortcut1m > span.FName,
span.FunShortcut2 > span.FName,
span.FunShortcut3 > span.FName,
span.FunShortcut4 > span.FName {
    color: darkgreen;
}

/* requires r [m] */
/* requires r >= ... */
/* requires r1, r2*/

span.RequireKeyword {
    color: darkred;
}

span.ResStatement > span.RName,
span.ResShortcut1 > span.RName,
span.ResShortcut1m > span.RName,
span.ResShortcut2 > span.RName,
span.ResShortcut3 > span.RName,
span.ResShortcut4 > span.RName {
    color: darkred;
}

span.SetNameRValue > span.SetNameGenericVar {
    color: darkred;
}
span.SetNameFValue > span.SetNameGenericVar {
    color: darkgreen;
}
/* There is a bug that prevents this from working correctly. */
/* span.ImpName { color: #CC6600; } */
span.FuncName { color: #CC6600 ; }


span.DPName, span.NDPName, span.PosetName, span.TemplateName,
span.TemplateParamName,
span.FinitePosetElement,
span.SingleElementPosetTag
{  
    color: #a0a;
}

span.DPTypeName, span.DPVariableRef {
    color:  #00F; 
    font-weight: bold; 
}
  
span.comment { 
    color: grey;
}

span.line-gutter {    
    margin-right: 1em; 
    color: grey; 
}

span.PlaceholderLabel {
    color: grey;
    /*font-style: italic;*/
}

span.semantic_error {
    background-color: pink;
}
span.language_warning {
    background-color: yellow;
}


span.CommentModel {
    color: purple ;
    font-weight: bold;
}

span.CommentFun {
    color: darkgreen;
    font-weight: bold;
}

span.CommentRes {
    color: darkred;
    font-weight: bold;
}
