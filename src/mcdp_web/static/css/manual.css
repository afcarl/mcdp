


body {
  font-family: "Times New Roman", Times, serif !important;
  font-size: 10pt;
}


@font-face {
    font-family: monospace;
    /*src: local("Consolas")*/
    src: local("Anka/Coder Narrow")
}


h1 {
    text-align: center;
}

.toc a { text-decoration: none; }

/* Good for safari */
pre {
     box-shadow: none;
}

.ndp_graph_expand,
.ndp_graph_enclosed,
.ndp_graph_normal,
.ndp_graph_templatized,
.ndp_graph_templatized_labeled,
.template_graph_enclosed {
    max-width: 50em;
    
}

span.language_warning { background-color: inherit !important; }

p { max-width: 40em; }

code { page-break-inside: avoid; }



pre, code { font-size: 8pt; }


body {
  text-align: justify;
}
 
h1 { font-size: 15pt; color: black !important;}
h2 { font-size: 12pt; color: black !important;}
h3 { 
    font-size: 10pt; }

code { 
    font-family: monospace, Cambria, "Cambria Math"; 
}

p code { font-size: 8pt; }
pre, pre code { 
}
pre .label { font-size: 8px; font-style: normal; }
pre { 
    margin-left: 0.4em !important; 
    border-radius: 4px !important; 
    padding: 5px !important;
}
/* without labels */
pre:not(.has_label) { 
    /*margin-top: 0 !important;*/ 
     
}
/* with labels */
pre.has_label { 
    /*margin-top: 0.7em !important; */
}

p { margin-top: 0.3em; margin-bottom: 0.3em; }
h1,h2,h3 { margin-bottom: 0.3em; margin-top: 0.3em; }
pre code { margin: 0; }
pre { padding: 3pt; }
a { color: #005; }
/*ul, li {padding: 0; padding-left: 0em !important;}*/
ul.toc { padding-left: 0; }
li {margin: 0; margin-left: 0em;}
/*.toc ul ul li { display: none; }*/
 
 
/************ TOC ***************/

@media screen {
    ul.toc { 
        column-count: 2; 
        column-gap: 20px;
        /*max-height: 30em;*/
    }
    ul#main_toc > li > ul > li{
        padding-top: 2pt;
        /*color: red;*/
    }
    ul#main_toc > li > ul > li > ul   {
        margin-top: 1pt;
        margin-bottom: 1pt;
    }

}
@media print {
    /** two-column format */
    ul.toc { 
        column-count: 2; 
        column-gap: 20px;
    }
    
    /** add page numbers for the first two */
    ul#main_toc > li > a::after { 
        content: leader('_')  target-counter(attr(href), page) ;
        font-weight: bold;
    }

    ul#main_toc > li > ul > li > a::after {
         content: leader('_') target-counter(attr(href), page); 
     }
}

ul#main_toc > li > a > span.toc_number { 
    font-weight: bold;
}
ul#main_toc > li > a > span.toc_number::before { 
    content: 'Chapter '; 
    font-weight: bold;
}

ul#main_toc ul,
ul#main_toc ul ul {
    margin-left: 0;
}
ul#main_toc ul ul li  a {
    color: gray !important;
}
ul#main_toc ul ul li {
    display: inline;
}

ul.toc ul ul li a span.toc_number { display: none; }

ul.toc ul ul li a span.toc_name::before {
    margin-right: 3pt;
    
    content: '⟡'; /*◇';*/
    font-family: 'Cambria' !important;
    font-size: 6pt;
    /*padding-bottom: 5pt !important;*/
    /*border: solid 1px red;*/
    /*margin-top: -20pt !important;*/
    /*display: inline;*/
}
ul.toc ul ul li:first-child a span.toc_name::before {
    content: '';
    margin: 0;
}

/*div > ul:not(.toc)  {
    margin-left: 2em;
    margin-top: -0.3em;
    margin-bottom: -0.3em;
}
*/

/* first header down is highlighted */
ul.chapter_toc > li > a {
    font-weight: bold;
}


/* below numbers are erased */
ul.chapter_toc > li > ul > li > a.toc_link > span.toc_number {
    /*color: red; */
}

ul.chapter_toc > li > ul > li > a.toc_link > span.toc_number {
    display: none;
}

ul.chapter_toc > li > ul > li > a.toc_link > span.toc_name::before {
    content: '•';
    margin-right: 0.5em;
}



/* keywords appearing in headers */
ul.toc code { 
    /*color: red !important;*/
    font-size: 7pt !important; 
    color: #a2a2a2 !important;
}
ul.toc, ul.toc ul { padding: 0; margin-left: 1em;} 

ul.toc li { padding: 0; margin: 0;} 

ul#main_toc > li {
    /*margin-bottom: 3em;*/
    padding-bottom: 1em;
}
ul#main_toc > li > ul {
    padding-top: 4pt;
}
ul#main_toc > li > a span.toc_name { 
    font-weight: bold;  
    
/*    font-size: larger;*/
}

/*********  end TOC ************/

/********** headings *********/

#toc-heading { text-align: center; }

h2 { margin-top: 2em !important; }
h3 {
    color: #615d5d;

    font-style: normal !important;
    font-weight: bold;
    padding-top: 1em;

    width: 100%;
    padding-bottom: 3pt;
    border-bottom: solid 0.5pt grey;
}

h1:not(#booktitle), #toc-heading { font-variant: small-caps; }
h1:not(#booktitle) ::before { content: 'Chapter '; }
/***** end headings *****/


/******  latex ****/ 

div.definition::before { font-weight: bold; content: 'Definition ' counter(definition)'.';}
div.example::before { font-weight: bold; content: 'Example ' counter(example) '.';}
div.remark::before { font-weight: bold; content: 'Remark ' counter(remark)'.';}
div.problem::before { font-weight: bold; content: 'Problem ' counter(problem)'.';}
div.lemma::before { font-weight: bold; content: 'Lemma ' counter(lemma)'.';}
div.proposition::before { font-weight: bold; content: 'Proposition ' counter(proposition)'.';}
div.theorem::before { font-weight: bold; content: 'Theorem ' counter(theorem)'.';}


.latex_env span.latex_env_label::before {content: ' (';}
.latex_env span.latex_env_label::after {content: ') ';}


/****** end latex ****/ 

/**** misc ***/


body { 
    hyphens: auto;
}
/* No decoration for links */
a { 
    text-decoration: none;
     color: darkblue;
}


pre { 
    margin-bottom: 0;
}

p + pre {
    margin-top: 0.7em;
} 
pre + br + pre { 
    margin-top: 0.3em;
    /*border: solid 1px red;*/
 /*float: left; clear: left;*/
}


p.todo {
    background-color: #fdd;
}
p.todo::before { content: 'TODO: '; }


figure:not(.subfloat) {
    /*counter-increment: figure;*/
    counter-reset: subfloat;
}
figure.subfloat {
    counter-increment: subfloat;
}

figure[id^='fig:'] { counter-increment: figure; }
figure.table {  counter-increment: table; }
div.example {  counter-increment: example; }
div.remark {  counter-increment: remark; }
div.definition {  counter-increment: definition; }
div.lemma {  counter-increment: lemma; }
div.proposition {  counter-increment: proposition; }
div.theorem {  counter-increment: theorem; }
div.problem {  counter-increment: problem; }



figure[id^='code:'] { counter-increment: listing; }
figure[id^='code:'] figcaption:not(:empty)::before {
    content: 'Listing ' counter(listing) '. ';
}

figure[id^='code:'] {
    display: inline-block;
    text-align: center;
}
figure[id^='fig:']
{
    /*border: solid blue;*/
    text-align: center;
}
figure[id^='code:'] figcaption {
    text-align: center;
    /*border: solid;*/
    width: 100%;
}
figure[id^='code:'] figcaption:empty::before {
    content: 'Listing ' counter(listing);
}


/* Not empty caption */
figure.table {
    display: inline-block;
}
figure.table figcaption {
    padding-left: 2em;
    padding-right: 2em;
    width: 100%;
    text-align: center;
    font-variant: small-caps;
}

figure[id^='tab:'] > figcaption:not(:empty) {
}
figure[id^='tab:'] > figcaption:not(:empty)::before {
    content: 'Table ' counter(table) '. ';
}
figure[id^='tab:'] > figcaption:empty::before {
    content: 'Table ' counter(table);
}


figure[id^='fig:'] > figcaption:not(:empty) {
    text-align: justify;
}
figure[id^='fig:'] > figcaption:not(:empty)::before {
    content: 'Figure ' counter(figure) '. ';
    /*font-style: italic;*/
}

figure[id^='subfig:'] figcaption:not(:empty)::before {
    content: '(' counter(subfloat, lower-alpha) ') ';
}
figure[id^='subfig:'] figcaption:empty::before {
    content: '(' counter(subfloat, lower-alpha) ') ';
}

/* Empty caption */
figcaption { font-size: smaller; }
figure[id^='fig:'] { text-align: center; }
figure[id^='fig:'] > figcaption:empty { text-align: center; }
figure[id^='fig:'] > figcaption:empty::before {
    content: 'Figure ' counter(figure);
    /*font-style: italic;*/
}

a[href^='#eq:'    ]:empty:not(.only-number)::before {  content:'(♦)';content: '(' target-counter(attr(href), listing) ')'; }
a[href^='#eq:'    ]:empty.only-number::before       {  content:'♦';  target-counter(attr(href), listing); }
a[href^='#code:'  ]:empty::before {  content: 'Listing♦'; content: 'Listing\0000a0' target-counter(attr(href), listing); }
a[href^='#fig:'   ]:empty:not(.only-number)::before {  content: 'Fig.♦'; content: 'Fig.\0000a0' target-counter(attr(href), figure);  }
a[href^='#fig:'   ]:empty.only-number::before { content: '♦'; content:   target-counter(attr(href), figure) ; }
a[href^='#subfig:']:empty:not(.only-number)::before {  content: 'Fig.♦?'; content: 'Fig.\0000a0' target-counter(attr(href), figure)  target-counter(attr(href), subfloat,  lower-alpha); }
a[href^='#subfig:']:empty.only-number::before {  content: '♦?';  content:  target-counter(attr(href), figure) target-counter(attr(href), subfloat, lower-alpha); }
a[href^='#tab:'   ]:empty:not(.only-number)::before { content: 'Table♦'; content: 'Table\0000a0' target-counter(attr(href), table);}
a[href^='#tab:'   ]:empty.only-number::before {  content: '♦'; content:  target-counter(attr(href), table);}
a[href^='#rem:'   ]:empty::before {  content: 'Remark.♦';content: 'Remark\0000a0' target-counter(attr(href), remark); }
a[href^='#lem:'   ]:empty::before {  content: 'Lemma.♦';content: 'Lemma\0000a0' target-counter(attr(href), lemma); }
a[href^='#def:'   ]:empty::before {  content: 'Def.♦'; content: 'Def.\0000a0' target-counter(attr(href), definition); }
a[href^='#prop:'  ]:empty::before {  content: 'Prop.♦';content: 'Prop.\0000a0' target-counter(attr(href), proposition); }
a[href^='#prob:'  ]:empty::before {  content: 'Problem.♦';content: 'Problem\0000a0' target-counter(attr(href), problem); }
a[href^='#exa:'   ]:empty::before  {  content: 'Example.♦';content: 'Example\0000a0' target-counter(attr(href), example); }
a[href^='#thm:'   ]:empty:not(.only-number)::before {  content: 'Theorem♦'; content: 'Theorem\0000a0' target-counter(attr(href), theorem); }
a[href^='#thm:'   ]:empty.only-number::before {  content: '♦'; content: target-counter(attr(href), theorem); }


/** maybe chapter **/

/** Very important - otherwise counters are local to divs,
    and not robust to errors with divs */

body {
 counter-reset: table bib section subsection subsubsection figure example remark definition proposition lemma theorem problem;

}
h1:not([nonumber]) {  
    counter-increment: section; 
    margin-bottom: 2em;
}
h1 {
    counter-reset: subsection subsubsection;
}

/*h2 :not([nonumber]) */
/*h2:not([nonumber]) { }*/
    /*border: solid;*/

h2:not([nonumber]) { 
    counter-increment: subsection; 
}
h2 {
    counter-reset: subsubsection; 
}

h3:not([nonumber]) {  
    counter-increment: subsubsection; 
}


a[href^='#sec:']::before { 
    content: 'Chapter♦';
    content: 'Chapter\0000a0' target-counter(attr(href), section); 
}

ul.toc a[href^='#sec:']::before { /* mdash: — ndahs:  –; */
    content: 'Chapter\0000a0' '♦' ' –'; 
    content: 'Chapter\0000a0' target-counter(attr(href), section) ' –'; 
    font-weight: bold;
}

h1:not([nonumber])::before {
    content: 'Chapter\0000a0' counter(section);
    display:block;
    font-variant: small-caps;
    font-size: smaller;
    margin-bottom: 0.5em;
}
.toc_number { display :none; }
h1[nonumber]::before {
    /*content: '(u)';*/
}

a[href^='#sub:']::before { 
    content: 'Subsection♦.♦';
    content: 'Subsection\0000a0' target-counter(attr(href), section) '.' target-counter(attr(href), subsection) ; 
}
      


ul.toc a[href^='#sub:']::before {
    content: '♦.♦' ' –';
    content: target-counter(attr(href), section) '.' target-counter(attr(href), subsection) ' –'; 
    
}


h2:not([nonumber])::before {
    content: /*'Subsection\0000a0'*/ counter(section)'.'counter(subsection) '. ';
}


a[href^='#subsub:']::before { 
    content: 'Subsubsection♦';
    content: 'Subsubsection\0000a0' target-counter(attr(href), section) '.' target-counter(attr(href), subsection) '-' target-counter(attr(href), subsubsection, upper-alpha); 
}


ul.toc a[href^='#subsub:']::before {  
    display: none; content: none;
}

h3:not([nonumber])::before {
    /*content: counter(section) '.' counter(subsection) '-' counter(subsubsection, upper-alpha) '. ';*/
    content: counter(subsubsection, lower-alpha) ') ';
}
/*

h1:not([nonumber])::after {
    content: '{css_computed:"' counter(section)'"}';
    color: green;
}
h2:not([nonumber])::after {
    content: '{css_computed:"' counter(section)'.'counter(subsection) '"}';
    color: green;
}
h3:not([nonumber])::after {
    color: green;
    content: '{css_computed:"' counter(section)'.'counter(subsection)'-'counter(subsubsection, upper-alpha) '"}';
}

*/


/*TODO: make preprocessing into code*/
/*f,r { font-family: monospace; font-size: 80%;}*/
f { color: darkgreen; }
r { color: darkred;}


div.figure { border: solid; }

.Fcolor { color: darkgreen; }
.Rcolor { color: darkred; }


.uline { text-decoration: underline; }

div.fbox { border: solid 1pt black; }

div.center, div.centering { text-align: center; }


cite {
    display: block;
    font-style: normal;
}
cite[id^='bib:'] {
    counter-increment: bib;
}
cite[id^='bib:']::before { 
    content: '[' counter(bib) '] ';
    font-style: normal;
}

