mcdp {
    implements `PartProducerInterface
    
    # extruder 
    extruder = instance `FDM_library.Extruder2
    min_workspace= provided part_length

    part_volume = (provided part_length)³
    part_volume provided by extruder ≽ part_volume
    service_temperature provided by extruder ≽ provided service_temperature
    part_resolution provided by extruder ≽ provided part_resolution
    
    # XY moves around the extruder
    XY = instance `mechanisms.XY_concrete
    XY.workspace >= min_workspace
    XY.precision >= provided part_resolution
    payload_mass provided by XY ≽ mass required by extruder
    velocity provided by XY ≽ 2mm/s
    force provided by XY ≽ 0 N # extruder does not excert force (?)
    # Z moves the plate and should support the mass
    part_density = 0.0 kg/mm³ # XXX
    part_mass = (provided part_length)³ · part_density
    gravity = 9.81 m/s²
    weight = part_mass · gravity
    
    # Z moves around the plate
    Z = instance `mechanisms.Xjoint
    Z.workspace >= min_workspace
    Z.precision >= provided part_resolution
    velocity provided by Z ≽ 0.1 mm/s # can be very slow
    payload_mass provided by Z ≽ part_mass
    force provided by Z ≽ weight
    precision provided by Z ≽ provided part_resolution
    # acceleration is negligible
    acceleration provided by Z ≽0 m/s²
    acceleration provided by XY ≽0 m/s²
    
    required mass >= Z.mass + XY.mass + extruder.mass
    required initial_investment >= Z.cost + XY.cost + extruder.budget
   required electric_power >= Z.electric_power + XY.electric_power + extruder.electric_power
   required time_per_part >= extruder.time
}