mcdp {  
  provides endurance     [s] 
  provides extra_payload [kg]
  provides extra_power   [W]
  provides num_missions  [R]
  provides velocity      [m/s]

  requires total_cost [$]
  requires total_mass [g]
  
  battery = instance `Batteries
  actuation = instance `Actuation 

  total_power = extra_power + 
    power required by actuation

  missions provided by battery >= num_missions
  
  energy = provided endurance * total_power
  capacity provided by battery >= energy
  
  total_mass_components = (
      mass required by battery + 
      actuator_mass required by actuation +
      extra_payload)

  required total_mass >= total_mass_components
  
  gravity = 9.81 m/s^2
  weight = total_mass_components * gravity

  lift provided by actuation >= weight
  velocity provided by actuation >= velocity
  
  replacements = maintenance required by battery
  cost_per_replacement = 10 $
  labor_cost = cost_per_replacement * replacements

  required total_cost >= (
    cost required by actuation + 
    cost required by battery + 
    labor_cost)
}