flatten  mcdp {

  requires objective [dimensionless]

a = instance mcdp {
  provides a [dimensionless]
  requires a [dimensionless]
  a >= a
}
 
b = instance mcdp {
  provides b [dimensionless]
  requires b [dimensionless]
  b >= b
}
c = instance mcdp {
  provides c [dimensionless]
  requires c [dimensionless]
  c >= c
}
d = instance mcdp {
  provides d [dimensionless]
  requires d [dimensionless]
  d >= d
}
e = instance mcdp {
  provides e [dimensionless]
  requires e [dimensionless]
  e >= e
}
f = instance mcdp {
  provides f [dimensionless]
  requires f [dimensionless]
  f >= f
}
a.a >= 0.50 [] * min(b.b, f.f)
a.a >= 0.50 [] * min(c.c, d.d)
b.b >= 0.20 []
c.c >= 0.45 []
c.c >= 0.30 []
d.d >= 1.00[]
e.e >= 0.50 []
f.f >= 0.90 [] * e.e

required objective >= min(a.a, max(c.c, e.e))
}