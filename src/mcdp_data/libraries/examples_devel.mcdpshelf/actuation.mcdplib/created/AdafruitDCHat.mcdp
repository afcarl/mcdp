
mcdp {
    provides out1 [`PWM]
    provides out2 [`PWM]
    provides out3 [`PWM]
    provides out4 [`PWM]

    requires in [`PortableDCPower]

    requires payload [`Payload]

    (required payload).mass >= 15 g
    (required payload).shape >= <65mm, 56mm, 13mm>

    (provided out1).amp_max <= 1.5 A
    (provided out2).amp_max <= 1.5 A
    (provided out3).amp_max <= 1.5 A
    (provided out4).amp_max <= 1.5 A
    (provided out1).voltage_max <= 13.5 V
    (provided out2).voltage_max <= 13.5 V
    (provided out3).voltage_max <= 13.5 V
    (provided out4).voltage_max <= 13.5 V
    (provided out1).freq_max <= 100 Hz
    (provided out2).freq_max <= 100 Hz
    (provided out3).freq_max <= 100 Hz
    (provided out4).freq_max <= 100 Hz

    total_current =
        (provided out1).amp_max +
        (provided out2).amp_max +
        (provided out3).amp_max +
        (provided out4).amp_max

    ((required in).dc).amps >= total_current
    ((required in).dc).voltage >= `plugs.DC_voltages: v5
    ((required in).dc).connector >= `plugs.barrel_connectors: barrel_5mm

    
    rigid_body = max( (provided out1).rigid_body, (provided out2).rigid_body,
                      (provided out3).rigid_body, (provided out4).rigid_body)
    (required in).rigid_body >= rigid_body
    (required payload).rigid_body >= rigid_body

    (required in).duration >= max( (provided out1).duration, (provided out2).duration,
                                   (provided out3).duration, (provided out4).duration )

    requires budget [USD]
    budget >= 22.50 USD
 
    # (required pi_connection).amps >= 50 mA

    provides pisocketcom1 [`PISocketCom] 
    requires pisocketcom1 [`PISocketCom]

    core = instance `AdafruitDCHatCore
    provided pisocketcom1 <= core.pisocketcom1
    provided out1 <= core.out1
    provided out2 <= core.out2
    provided out3 <= core.out3
    provided out4 <= core.out4
    core.pisocketcom1 <= required pisocketcom1
}

