mcdp {
   provides out [`PortableDCPower]
   provides computation [flops]
   provides motion [`Motion]
   provides payload [`Payload]

   requires budget [USD]
   requires in [`AC_Charging] 

   (provided motion).velocity <= 5 m/s
   budget >= 10000 USD

   computer = instance template mcdp {
     provides computation [flops]
     requires dc [`PortableDCPower]
      # todo
   }
   provided computation <= computation provided by computer

   battery = instance template mcdp {
     provides out1 [`PortableDCPower]
     provides out2 [`PortableDCPower]
     requires in [`AC_Charging]
     # todo
   }
   mass = (provided payload).mass
   shape = (provided payload).shape
 
  # limit x and y
   take(shape, 0) <= 30m
   take(shape, 1) <= 50cm

   mass <= 10 kg

   out1 provided by battery >= dc required by computer
   out2 provided by battery >= provided out
   in required by battery <= required in        
}