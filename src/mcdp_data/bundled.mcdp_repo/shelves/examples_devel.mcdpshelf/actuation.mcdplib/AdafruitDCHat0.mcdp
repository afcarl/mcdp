mcdp {
    provides out1 [`PWM]
    provides out2 [`PWM]
    provides out3 [`PWM]
    provides out4 [`PWM]

    requires in [`PortableDCPower]

    requires payload [`Payload]

    (required payload).mass ≽ 15 g
    (required payload).shape ≽ ⟨65mm, 56mm, 13mm⟩

    (provided out1).amp_max ≼ 1.5 A
    (provided out2).amp_max ≼ 1.5 A
    (provided out3).amp_max ≼ 1.5 A
    (provided out4).amp_max ≼ 1.5 A
    (provided out1).voltage_max ≼ 13.5 V
    (provided out2).voltage_max ≼ 13.5 V
    (provided out3).voltage_max ≼ 13.5 V
    (provided out4).voltage_max ≼ 13.5 V
    (provided out1).freq_max ≼ 100 Hz
    (provided out2).freq_max ≼ 100 Hz
    (provided out3).freq_max ≼ 100 Hz
    (provided out4).freq_max ≼ 100 Hz

    total_current =
    (provided out1).amp_max +
    (provided out2).amp_max +
    (provided out3).amp_max +
    (provided out4).amp_max

    ((required in).dc).amps ≽ total_current
    ((required in).dc).voltage ≽ `plugs.DC_voltages: v5
    ((required in).dc).connector ≽ `plugs.barrel_connectors: barrel_5mm

    rigid_body = max( (provided out1).rigid_body, (provided out2).rigid_body,
    (provided out3).rigid_body, (provided out4).rigid_body)
    (required in).rigid_body ≽ rigid_body
    (required payload).rigid_body ≽ rigid_body

    endurance = max( (provided out1).duration, (provided out2).duration,
    (provided out3).duration, (provided out4).duration )
    (required in).duration ≽ endurance

    requires budget [USD]
    required budget ≽ 22.50 USD
 
    requires pisocketcom1 [`PISocketCom]

    core = instance `AdafruitDCHatCore

    ⊥ `PISocketCom ≼ pisocketcom1 provided by core
    provided out1 ≼ out1 provided by core
    provided out2 ≼ out2 provided by core
    provided out3 ≼ out3 provided by core
    provided out4 ≼ out4 provided by core
    pisocketcom1 required by core ≼ required pisocketcom1
}

