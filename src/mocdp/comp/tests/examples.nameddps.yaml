- id: battery_open
  desc: ""
  code:
  - mocdp.comp.dpconnect
  - name2dp: 
      times: energy_times
      battery: battery
      actuation:
      - mocdp.comp.SimpleWrap
      - fnames: weight
        rnames: actuation_power
        dp: ['mocdp.example_battery.Mobility', {}]
    connections:
    - 'times.power >= actuation.actuation_power'
    - 'battery.capacity >= times.energy'


- id: battery_complete
  desc: ""
  code:
  - mocdp.comp.dpgraph
  - name2dp: 
      times: energy_times
      battery: battery
      actuation:
      - mocdp.comp.SimpleWrap
      - fnames: weight
        rnames: actuation_power
        dp: ['mocdp.example_battery.Mobility', {}]
    connections:
    - 'times.power >= actuation.actuation_power'
    - 'battery.capacity >= times.energy'
    - 'actuation.weight >= battery.battery_weight'

- id: energy_times
  desc: ""
  code:
  - mocdp.comp.SimpleWrap
  - fnames: ['mission_time', 'power']
    rnames: 'energy'
    dp: energy_product

- id: battery
  desc: ""
  code:
  - mocdp.comp.SimpleWrap
  - fnames: 'capacity'
    rnames: 'battery_weight'
    dp: BatteryDP

- id: maxh
  desc: ""
  code:
  - mocdp.comp.dpgraph
  - name2dp: 
      max: max_f_r
      h: hnlin
    connections:
    - 'h.x >= max.z'
    - 'max.r >= h.r'

- id: max_f_r
  desc: ""
  code:
  - mocdp.comp.SimpleWrap
  - fnames: ['f', 'r']
    rnames: 'z'
    dp: 
    - mocdp.dp.Max
    - F: Rcomp_J

- id: hnlin
  desc: ""
  code:
  - mocdp.comp.SimpleWrap
  - fnames: 'x'
    rnames: 'r'
    dp: SimpleNonlinearity1

- id: minh
  desc: ""
  code:
  - mocdp.comp.dpgraph
  - name2dp: 
      min: min_f_r
      h: hnlin
    connections:
    - 'h.x >= min.z'
    - 'min.r >= h.r'

- id: min_f_r
  desc: ""
  code:
  - mocdp.comp.SimpleWrap
  - fnames: ['f', 'r']
    rnames: 'z'
    dp: 
    - mocdp.dp.Min
    - F: Rcomp_J

- id: mobility
  desc: ""
  code:
  - mocdp.comp.SimpleWrap
  - fnames: weight
    rnames: actuation_power
    dp: ['mocdp.example_battery.Mobility', {}]

- id: battery_complete_parsed
  desc: ""
  code: 
  - mocdp.lang.parse
  - string: |
      cdp {
          battery = load battery
          times = load energy_times
          actuation = load mobility
          #     
          times.power >= actuation.actuation_power
          battery.capacity >= times.energy
          actuation.weight >= battery.battery_weight
      }


- id: testmax
  desc: "Test with max"
  code: 
  - mocdp.lang.parse
  - string: |
      cdp {
          provides f [R]
          
          hnlin = dp {
              provides x [R]
              requires r [R]
              
              implemented-by load SimpleNonlinearity1
          }
          
          hnlin.x >= max(f, hnlin.r)        
      }

- id: testmin
  desc: "Test with min"
  code: 
  - mocdp.lang.parse
  - string: |
      cdp {
          provides f [R]
          
          hnlin = dp {
              provides x [R]
              requires r [R]
              
              implemented-by load SimpleNonlinearity1
          }
          
          hnlin.x >= min(f, hnlin.r)        
      }

- id: testminsq
  desc: "Test with min"
  code: 
  - mocdp.lang.parse
  - string: |
      cdp {
        provides f0 [R]
        DP = cdp {
            provides f [R]
            
            hnlin = dp {
                provides x [R]
                requires r [R]
                
                implemented-by load SimpleNonlinearity1
            }
            
            hnlin.x >= min(f, hnlin.r)        
        }
        DP.f >= max(f0, DP.r)
      }

