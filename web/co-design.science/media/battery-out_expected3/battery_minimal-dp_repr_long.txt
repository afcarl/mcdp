DPLoop2:   R[s]×R[kg] -> 𝟙
L Series: %  (R[s]×R[kg])×R[J] -> (𝟙)×R[J]
L \ Series: %  (R[s]×R[kg])×R[J] -> R[J]
L . \ Mux(PosetProduct(2: PosetProduct(2: R[s],R[kg]),R[J]) -> PosetProduct(2: PosetProduct(2: R[J],R[kg]),R[s]), [[1, (0, 1)], (0, 0)])    I = (R[s]×R[kg])×R[J]
L . \ Series: %  (R[J]×R[kg])×R[s] -> R[J]
L . . \ Parallel2  % (R[J]×R[kg])×R[s] -> R[W]×R[s]
L . . . \ Series: %  R[J]×R[kg] -> R[W]
L . . . . \ Parallel2  % R[J]×R[kg] -> R[kg]×R[kg]
L . . . . . \ Template(R[J]→R[kg])
L . . . . . \ Id(R[kg])
L . . . . \ Series: %  R[kg]×R[kg] -> R[W]
L . . . . . \ WrapAMap(SumNMap(R[kg]×R[kg] -> R[kg]))
L . . . . . \ Series: %  R[kg] -> R[W]
L . . . . . . \ WrapAMap(MultValueMap:R[kg]→R[N])
L . . . . . . \ Template(R[N]→R[W])
L . . . \ Id(R[s])
L . . \ Series: %  R[W]×R[s] -> R[J]
L . . . \ Mux(PosetProduct(2: R[W],R[s]) -> PosetProduct(2: R[s],R[W]), [1, 0])    I = R[W]×R[s]
L . . . \ WrapAMap(ProductNMap:R[s]×R[W]→R[J])
L \ Mux(R[J] -> PosetProduct(2: PosetProduct([]),R[J]), [[], ()])    I = R[J]